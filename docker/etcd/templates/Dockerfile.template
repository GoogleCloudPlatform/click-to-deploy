# Update and install necessary packages
{{- $etcd := index .Packages "etcd" }}
{{- $golang := index .Packages "golang" }}
{{- $c2dRelease := index .TemplateArgs "c2dRelease" }}

FROM {{ .From }} as builder

# Install basic build tools and wget
RUN apt-get update && \
    apt-get install -y wget tar gzip

# Install Go
ARG GO_VERSION={{ $golang.Version }}
RUN wget https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz && \
    tar -xzf go${GO_VERSION}.linux-amd64.tar.gz -C /usr/local

ENV PATH="/usr/local/go/bin:$PATH"

# Set etcd version
ARG ETCD_VERSION={{ $etcd.Version }}
ARG ETCD_SHA256={{ $etcd.SHA256 }}
ENV ETCD_VER=${ETCD_VERSION}
ENV ETCD_FILE=etcd.tar.gz

# Download and verify etcd release
RUN wget -q https://github.com/etcd-io/etcd/releases/download/v${ETCD_VER}/etcd-v${ETCD_VER}-linux-amd64.tar.gz -O ${ETCD_FILE} && \
    echo "${ETCD_SHA256}  ${ETCD_FILE}" > checksum.txt && \
    sha256sum -c checksum.txt

# Extract only etcd and etcdctl
RUN mkdir -p /tmp/etcd && \
    tar -xzf ${ETCD_FILE} -C /tmp/etcd --strip-components=1 && \
    mv /tmp/etcd/etcd /usr/local/bin/ && \
    mv /tmp/etcd/etcdctl /usr/local/bin/

# Download the LICENSE file from GitHub
RUN wget -q https://raw.githubusercontent.com/etcd-io/etcd/v${ETCD_VER}/LICENSE -O /LICENSE

# ---------------------------------------
# Final lightweight image
FROM marketplace.gcr.io/google/debian12

ENV C2D_RELEASE {{ $c2dRelease }}

RUN apt-get update && \
    apt-get install -y libc-bin libssl3 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

COPY --from=builder /usr/local/bin/etcd /usr/local/bin/etcdctl /usr/local/bin/
COPY --from=builder /LICENSE /usr/share/etcd/LICENSE
COPY docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

ENV ETCD_DATA_DIR="/var/run/etcd/default.etcd"
EXPOSE 2379 2380

# Validate etcd version
RUN etcd_version=$(etcd --version | grep 'etcd Version:' | cut -d ' ' -f 3) && \
    test "${C2D_RELEASE}" = "${etcd_version}" || { echo "Version check failed: expected ${C2D_RELEASE}, got ${etcd_version}"; exit 1; }

ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["etcd"]
