#!/bin/bash -eu
#
# Copyright 2021 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

source /opt/c2d/c2d-utils || exit 1

readonly default_site="$(get_attribute_value "default_site_name")"

# Await the application to be ready.

function wait_for_app() {
  local max_retries=10
  local retry=1
  local http_code=0

  while [[ "${http_code}" -ne 200 && "${retry}" -le "${max_retries}" ]]; do
    http_code="$(curl -s -L -o /dev/null -w "%{http_code}" http://localhost)"
    (( retry=retry+1 ))
    sleep 5
  done

  if [[ "${retry}" -gt "${max_retries}" ]]; then
    echo "Max retries exceeded."
    exit 1
  fi
}

mkdir /opt/django/
cd /opt/django/

#Disable default apache2 site configuration,enable django site configuration
a2dissite 000-default
a2ensite django
systemctl reload apache2

# Create default project.
django-admin startproject "${default_site}"

# Check if a directory exists.
if [[ ! -d "/opt/django/${default_site}" ]]; then
  echo "Error: Directory ${default_site} does not exists."
  exit 1
fi

# Whitelist external IP address.
if has_external_ip; then
  sed -i -e "s@ALLOWED_HOSTS = \[]@ALLOWED_HOSTS = ['$(get_external_ip)', '.localhost', '127.0.0.1', '[::1]']@g" \
  "/opt/django/${default_site}/${default_site}/settings.py"
else
  echo "No external IP detected"
fi

# Install Django server
python3 "${default_site}/manage.py" migrate
cd /opt/django/${default_site}/
gunicorn "${default_site}".wsgi --daemon

# Wait until ready.
wait_for_app
