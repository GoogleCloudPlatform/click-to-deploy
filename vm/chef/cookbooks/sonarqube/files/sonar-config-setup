#!/bin/bash -eu
#
# Copyright 2021 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

source /opt/c2d/c2d-utils || exit 1

readonly postgres_sonar_db="$(get_attribute_value "sonar_db_pass")"
readonly sonar_pass="$(get_attribute_value "sonar_password")"
readonly user="admin"
readonly new_salt="$(tr -dc A-Za-z0-9 </dev/urandom | head -c 40 ; echo '')"
readonly new_password="${sonar_pass}"
readonly salted_password="$(echo -n "--${new_salt}--${new_password}--" | sha1sum | awk '{print $1}')"
readonly sonarqube_properties="/opt/sonarqube/conf/sonar.properties"

# Creating postgres DB for sonar.
sudo -u postgres psql <<EOF
CREATE USER sonar WITH ENCRYPTED PASSWORD '${postgres_sonar_db}';
CREATE DATABASE sonar OWNER sonar;
GRANT ALL PRIVILEGES ON DATABASE sonar TO sonar;
\q
EOF

# Configure SonarQube to run as a sonar user.
sed -i -e 's@#RUN_AS_USER=@RUN_AS_USER=sonar@g' /opt/sonarqube/bin/linux-x86-64/sonar.sh
# Sonarqube default configuration file edits.
sed -i -e 's@#sonar.jdbc.username=@sonar.jdbc.username=sonar@g' "${sonarqube_properties}"
sed -i -e 's@#sonar.jdbc.password=@sonar.jdbc.password='${postgres_sonar_db}'@g' "${sonarqube_properties}"
sed -i -e 's@#sonar.jdbc.url=jdbc:postgresql://localhost/sonarqube?currentSchema=my_schema@sonar.jdbc.url=jdbc:postgresql://localhost/sonar@g' "${sonarqube_properties}"
sed -i -e 's@#sonar.web.javaAdditionalOpts=@sonar.web.javaAdditionalOpts=-server@g' "${sonarqube_properties}"
sed -i -e 's@#sonar.web.host=0.0.0.0@sonar.web.host=0.0.0.0@g' "${sonarqube_properties}"
echo "sonar.search.javaAdditionalOpts=-Dlog4j2.formatMsgNoLookups=true" >> "${sonarqube_properties}"

passwd sonar <<EOF
$sonar_pass
$sonar_pass
EOF

# Enabling Sonarqube.
systemctl start sonar
systemctl enable sonar

# Await the application to be ready.
function wait_for_app() {
  local max_retries=10
  local retry=1
  local http_code=0

  while [[ "${http_code}" -ne 200 && "${retry}" -le "${max_retries}" ]]; do
    echo "Trying to fetch homepage... ${retry}"
    http_code="$(curl -s -L -o /dev/null -w "%{http_code}" http://localhost)"
    (( retry=retry+1 ))
    sleep 25
  done

  if [[ "${retry}" -gt "${max_retries}" ]]; then
    echo "Max retries exceeded."
    exit 1
  fi
}

wait_for_app

# Change admin password.
sudo -u sonar psql <<EOF
UPDATE users SET crypted_password='${salted_password}', salt='${new_salt}', hash_method='SHA1' WHERE login='${user}';
EOF
