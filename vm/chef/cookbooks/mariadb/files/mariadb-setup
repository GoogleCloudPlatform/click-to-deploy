#!/bin/bash -eu
#
# Copyright 2020 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

source /opt/c2d/mariadb-utils || exit 1

set -o pipefail

readonly hostname="$(hostname)"
readonly mysql_database="$(get_attribute_value "MYSQL_DATABASE")"
readonly mysql_root_password="$(get_attribute_value "MYSQL_ROOT_PASSWORD")"
readonly mysql_replication_password="$(get_attribute_value "MYSQL_REPLICATION_PASSWORD")"
readonly root_from_anywhere="$(get_attribute_value "MYSQL_ROOT_ANYWHERE_ALLOW")"
readonly master_node="mariadb-vm-0"

# This will convert "deployment.c.project.instance to mariadb-vm-index"
readonly short_hostname="mariadb-vm-$(echo ${hostname} \
                      | grep -o -P "mariadb-vm-(\d*)" \
                      | cut -d '-' -f 3)"

# This will get the instance id (zero-index based)
readonly instance_id="$(echo ${short_hostname} | cut -f 3 -d '-')"

# Get the list of MariaDB nodes
readonly cluster_hostname_list="$(get_attribute_value "ENV_MARIADB_NODE_HOSTNAMES" | tr '|' ' ')"

# This will increment 1 to instance_id as MariaDB requires a 1 index based id
export SERVER_ID="$((instance_id + 1))"
export DATABASE_NAME="${mysql_database}"
export MASTER_NODE_IP="$(host ${master_node} \
                        | awk -F 'has address' '{ print $2 }'s
                        | tr -d ' ')"

emit_msg "Starting MariaDB Configuration..."
emit_msg "MariaDB instances: ${cluster_hostname_list}"
emit_msg "----------------------------------"

emit_msg "Adding VMs short hostnames..."
add_short_hostnames "${cluster_hostname_list}"

for node in ${cluster_hostname_list}; do
    # Stop node
    systemctl stop mariadb

    # Bind service to all available addresses
    bind_to_all_addresses

    # Change current hostname in order to avoid MariaDB using the full name
    hostname "${short_hostname}"

    # If script running on master node
    if [[ ${master_node} == "${short_hostname}" ]]; then
      setup_master
    else
      setup_replicas
    fi

    emit_msg "Node ${SERVER_ID} is now running."

  (( SERVER_ID += 1 ))
done
