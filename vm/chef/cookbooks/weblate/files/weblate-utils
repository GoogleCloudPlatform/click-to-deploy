#!/bin/bash -eu
#
# Copyright 2021 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

source /opt/c2d/c2d-utils || exit 1

#######################################
# Awaits for host and port be ready.
# Arguments:
#   Target Hostname.
#   Target Port.
#   Timeout expected, 300s by default.
#######################################
function wait_for_port() {
  local -r host="$1"
  local -r port="$2"
  local -r timeout="${3:-300}"

  timeout --preserve-status "${timeout}" bash -c "until echo > /dev/tcp/${host}/${port}; do sleep 2; done"
  if [[ "$?" -ne 0 ]]; then
    exit 1
  fi
}

#######################################
# Awaits for website at localhost be ready.
#######################################
function wait_for_app() {
  local max_retries=10
  local retry=1
  local http_code=0
  local host_ip=""

  if [[ has_external_ip ]]; then
    host_ip="$(get_external_ip)"
  else
    host_ip="$(get_internal_ip)"
  fi

  echo "Checking for app readiness..."

  while [[ "${http_code}" -ne 200 && "${retry}" -le "${max_retries}" ]]; do
    echo "Retry: ${retry}"
    http_code="$(curl -s -L -o /dev/null -w "%{http_code}" http://${host_ip})"
    (( retry=retry+1 ))
    sleep 20
  done

  if [[ "${retry}" -gt "${max_retries}" ]]; then
    echo "Max retries exceeded."
    exit 1
  else
    echo "App is ready."
  fi
}

#######################################
# Activates weblate virtualenv.
#######################################
function activate_virtualenv() {
  set +u && source /opt/weblate-env/bin/activate && set -u
}

#######################################
# Creates app database user.
#######################################
function create_db_user() {
  sudo -u postgres psql -c "CREATE USER ${WEBLATE_DB_USER} WITH PASSWORD '${WEBLATE_DB_PASSWORD}';"
  sudo -u postgres psql -c "CREATE DATABASE ${WEBLATE_DB_NAME} OWNER ${WEBLATE_DB_USER};"
}
