kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: $APP_INSTANCE_NAME-sample-app-pvc
  labels:
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: sample-app-instance
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
  storageClassName: $STORAGE_CLASS
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: $APP_INSTANCE_NAME-sample-app-deployment
  labels: &DeploymentLabels
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: sample-app-instance
spec:
  replicas: 1
  selector:
    matchLabels: *DeploymentLabels
  template:
    metadata:
      labels: *DeploymentLabels
    spec:
      volumes:
      - name: $APP_INSTANCE_NAME-sample-app-pvc
        persistentVolumeClaim:
          claimName: $APP_INSTANCE_NAME-sample-app-pvc
      containers:
      - name: sample-app-instance
        image: $IMAGE_SAMPLE_APP
        ports:
        - containerPort: 80
        volumeMounts:
        - name: $APP_INSTANCE_NAME-sample-app-pvc
          mountPath: /var/persistent-volume
        readinessProbe:
          httpGet:
            path: /
            port: 80
        env:
        - name: SAMPLE_APP_PARAMETER1
          value: '$SAMPLE_APP_PARAMETER1'
        resources:
          limits:
            memory: 1.0Gi
          requests:
            memory: 1.0Gi
---
kind: Service
apiVersion: v1
metadata:
  name: $APP_INSTANCE_NAME-sample-app-svc
  labels: &DeploymentLabels
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: sample-app-instance
spec:
  type: NodePort
  selector: *DeploymentLabels
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
