---
# PodDisruptionBudget to prevent degrading the server cluster through
# voluntary cluster changes.
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: {{ .Release.Name }}-consul-server
  labels: &ConsulDeploymentLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: consul-server
spec:
  maxUnavailable: {{ template "consul.pdb.maxUnavailable" . }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}
      app.kubernetes.io/component: consul-server
---
# ConfigMap with extra configuration specified directly to the chart
# for client agents only.
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-consul-client-config
  labels: &ConsulDeploymentLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: consul-client
data:
  extra-from-values.json: |-
    {}
---
# ConfigMap with extra configuration specified directly to the chart
# for servers agents only.
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-consul-server-config
  labels: &ConsulDeploymentLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: consul-server
data:
  extra-from-values.json: |-
    {}
---
# Service for Consul DNS.
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-consul-dns
  labels: &ConsulDeploymentLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: consul
spec:
  ports:
    - name: dns-tcp
      port: 53
      protocol: "TCP"
      targetPort: dns-tcp
    - name: dns-udp
      port: 53
      protocol: "UDP"
      targetPort: dns-udp
  selector:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: consul-client
    hasDNS: "true"
---
# Headless service for Consul server DNS entries. This service should only
# point to Consul servers. For access to an agent, one should assume that
# the agent is installed locally on the node and the NODE_IP should be used.
# If the node can't run a Consul agent, then this service can be used to
# communicate directly to a server agent.
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-consul-server
  labels: &ConsulDeploymentLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: consul-server
  annotations:
    # This must be set in addition to publishNotReadyAddresses due
    # to an open issue where it may not work:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None
  # We want the servers to become available even if they're not ready
  # since this DNS is also used for join operations.
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 8500
      targetPort: 8500
    - name: serflan-tcp
      protocol: "TCP"
      port: 8301
      targetPort: 8301
    - name: serflan-udp
      protocol: "UDP"
      port: 8301
      targetPort: 8301
    - name: serfwan-tcp
      protocol: "TCP"
      port: 8302
      targetPort: 8302
    - name: serfwan-udp
      protocol: "UDP"
      port: 8302
      targetPort: 8302
    - name: server
      port: 8300
      targetPort: 8300
    - name: dns-tcp
      protocol: "TCP"
      port: 8600
      targetPort: dns-tcp
    - name: dns-udp
      protocol: "UDP"
      port: 8600
      targetPort: dns-udp
  selector: *ConsulDeploymentLabels
---
# UI Service for Consul Server
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-consul-ui
  labels: &ConsulDeploymentLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: consul-server
spec:
  selector: *ConsulDeploymentLabels
  ports:
    - name: http
      port: 80
      targetPort: 8500

