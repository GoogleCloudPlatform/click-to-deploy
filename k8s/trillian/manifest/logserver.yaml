apiVersion: v1
kind: Service
metadata:
  name: $APP_INSTANCE_NAME-logserver-service
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: logserver
  annotations:
      cloud.google.com/load-balancer-type: "Internal"
spec:
  ports:
  - name: grpclb
    port: 8090
  - name: metrics
    port: 8091
  selector:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: logserver
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $APP_INSTANCE_NAME-logserver-deployment
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: logserver
spec:
  replicas: $TRILLIAN_LOGSERVER_REPLICAS
  selector:
    matchLabels:
      app.kubernetes.io/name: "$APP_INSTANCE_NAME"
      app.kubernetes.io/component: logserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "$APP_INSTANCE_NAME"
        app.kubernetes.io/component: logserver
    spec:
      restartPolicy: Always
      containers:
      - name: trillian-logserver
        args: [
        "$(STORAGE_FLAG)",
        "--storage_system=$(STORAGE_SYSTEM)",
        "--quota_system=etcd",
        "--etcd_servers=$APP_INSTANCE_NAME-etcd-cluster-client:2379",
        "--etcd_http_service=$APP_INSTANCE_NAME-logserver-http",
        "--rpc_endpoint=0.0.0.0:8090",
        "--http_endpoint=0.0.0.0:8091",
        "--tracing",
        "--alsologtostderr",
        ]
        envFrom:
        - configMapRef:
            name: $APP_INSTANCE_NAME-config
        - secretRef:
            name: $APP_INSTANCE_NAME-secrets
        image: $IMAGE_TRILLIAN_LOGSERVER
        resources:
          limits:
            cpu: "1.0"
          requests:
            cpu: "0.4"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8091
          failureThreshold: 3
          periodSeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8090
          name: rpc
        - containerPort: 8091
          name: metrics
