---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-mariadb
  labels: &MariaDBDeploymentLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: mariadb-server
spec:
  replicas: 1
  selector:
    matchLabels: *MariaDBDeploymentLabels
  serviceName: {{ .Release.Name }}-mariadb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels: *MariaDBDeploymentLabels
    spec:
      serviceAccountName: "default"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels: *MariaDBDeploymentLabels
      containers:
      - name: mariadb
        image: "{{ .Values.mariadb.image.repo }}:{{ .Values.mariadb.image.tag }}"
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mariadb
              key: mariadb-pass
        - name: MARIADB_REPLICATION_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mariadb
              key: mariadb-replication-user
        - name: MARIADB_REPLICATION_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mariadb
              key: mariadb-replication-password
        ports:
        - name: mariadb
          containerPort: {{ .Values.service.port }}
        livenessProbe:
          tcpSocket:
            port: mariadb
          initialDelaySeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: mariadb
          initialDelaySeconds: 5
          timeoutSeconds: 2
        volumeMounts:
        - name: {{ .Release.Name }}-data-pvc
          mountPath: /var/lib/mariadb
        - name: configmap
          mountPath: /etc/mysql/mariadb.conf.d
        - name: tls-volume
          mountPath: /etc/mysql/mariadb.conf.d/certs
        - name: replication-config
          mountPath: /docker-entrypoint-initdb.d/
          readOnly: true
      - name: mysqld-exporter
        image: {{ .Values.db.exporter.image }}
        env:
        - name: MYSQLD_EXPORTER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mariadb
              key: mysqld-exporter-pass
        - name: DATA_SOURCE_NAME
          value: {{ .Values.db.exporter.user }}:$(MYSQLD_EXPORTER_PASSWORD)@(127.0.0.1:3306)/
        ports:
        - name: exporter
          containerPort: 9104
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9104
        readinessProbe:
          httpGet:
            path: /metrics
            port: 9104
          initialDelaySeconds: 60
          timeoutSeconds: 30
          failureThreshold: 10
          periodSeconds: 10
      {{ if .Values.metrics.exporter.enabled }}
      - name: prometheus-to-sd
        image: {{ .Values.metrics.image }}
        command:
        - /monitor
        - --stackdriver-prefix=custom.googleapis.com
        - --source=mariadb:http://localhost:9104/metrics
        - --pod-id=$(POD_NAME)
        - --namespace-id=$(POD_NAMESPACE)
        - --monitored-resource-types=k8s
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      {{ end }}
      volumes:
        - name: configmap
          configMap:
            name: {{ .Release.Name }}-mariadb
        - name: tls-volume
          secret:
            secretName: {{ .Release.Name }}-tls
        - name: replication-config
          secret:
            secretName: {{ .Release.Name }}-mariadb
            items:
            - key: mariadb-replication.sql
              path: mariadb-replication.sql
            - key: mysqld_exporter.sql
              path: mysqld_exporter.sql
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-data-pvc
      labels: *MariaDBDeploymentLabels
    spec:
      resources:
        requests:
          storage: {{ .Values.mariadb.persistence.size }}
      accessModes:
      - ReadWriteOnce
      storageClassName: {{ .Values.mariadb.persistence.storageClass }}
