---
apiVersion: v1
kind: Secret
metadata:
  name: $APP_INSTANCE_NAME-mysql-secret
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: wordpress-mysql
type: Opaque
stringData:
  wp_user: "wordpress"
data:
  root_password: "${ROOT_DB_PASSWORD}"
  wp_password: "${WORDPRESS_DB_PASSWORD}"
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: $APP_INSTANCE_NAME-mysql
  labels: &MySQLDeploymentLabels
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: wordpress-mysql
spec:
  replicas: 1
  selector:
    matchLabels: *MySQLDeploymentLabels
  serviceName: $APP_INSTANCE_NAME-mysql-svc
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels: *MySQLDeploymentLabels
    spec:
      containers:
      - image: $IMAGE_MYSQL
        name: mysql
        env:
        # A password for root superuser.
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: $APP_INSTANCE_NAME-mysql-secret
              key: root_password
        # A database name to be created at startup.
        - name: MYSQL_DATABASE
          value: wordpress
        # A new user to be created at startup.
        - name: MYSQL_USER
          valueFrom:
           secretKeyRef:
             name: $APP_INSTANCE_NAME-mysql-secret
             key: wp_user
        # A password of the new user created at startup.
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: $APP_INSTANCE_NAME-mysql-secret
              key: wp_password
        ports:
        - name: mysql
          containerPort: 3306
        volumeMounts:
        - name: $APP_INSTANCE_NAME-mysql-pvc
          mountPath: /var/lib/mysql
          subPath: data
        readinessProbe:
          exec:
            command: ["sh", "-c", "exec mysqladmin status -uroot -p$MYSQL_ROOT_PASSWORD"]
          initialDelaySeconds: 15
        livenessProbe:
          exec:
            command: ["sh", "-c", "exec mysqladmin status -uroot -p$MYSQL_ROOT_PASSWORD"]
          initialDelaySeconds: 120
  volumeClaimTemplates:
  - metadata:
      name: $APP_INSTANCE_NAME-mysql-pvc
      labels:
        app.kubernetes.io/name: "$APP_INSTANCE_NAME"
        app.kubernetes.io/component: wordpress-server
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: $APP_INSTANCE_NAME-mysql-svc
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: wordpress-mysql
spec:
  ports:
  - name: mysql
    port: 3306
  selector:
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: wordpress-mysql
  clusterIP: None
