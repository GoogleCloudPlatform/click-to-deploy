---
# TODO(huyhuynh): Change this to using StatefulSet
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: $APP_INSTANCE_NAME-mysql
  labels: &MysqlDeploymentLabels
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: wordpress-mysql
spec:
  replicas: 1
  selector:
    matchLabels: *MysqlDeploymentLabels
  template:
    metadata:
      labels: *MysqlDeploymentLabels
    spec:
      containers:
      - image: $IMAGE_MYSQL
        name: mysql
        env:
        - name: "MYSQL_ROOT_PASSWORD"
          value: "example-password"
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: $APP_INSTANCE_NAME-mysql-pvc
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: $APP_INSTANCE_NAME-mysql-pvc
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: wordpress-mysql
spec:
  accessModes: [ReadWriteOnce]
  storageClassName: standard
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: $APP_INSTANCE_NAME-mysql-svc
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: wordpress-mysql
spec:
  ports:
  - port: 3306
  selector:
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: wordpress-mysql
  clusterIP: None
---
# TODO(huyhuynh): Change this to using StatefulSet
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: $APP_INSTANCE_NAME-wordpress
  labels: &WordpressDeploymentLabels
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: wordpress-webserver
spec:
  replicas: 1
  selector:
    matchLabels: *WordpressDeploymentLabels
  template:
    metadata:
      labels: *WordpressDeploymentLabels
    spec:
      initContainers:
      - image: $IMAGE_INIT
        name: wordpress-init
        env:
        - name: AGENT_LOCAL_PORT
          value: "6080"
        volumeMounts:
        - name: data
          mountPath: /var/www/html
          subPath: wp
        - name: ubbagent-config
          mountPath: /etc/ubbagent
      containers:
      - image: $IMAGE_WORDPRESS
        name: wordpress
        env:
        - name: WORDPRESS_DB_HOST
          value: $APP_INSTANCE_NAME-mysql-svc
        # TODO(huyhuynh): Use secrets.
        - name: WORDPRESS_DB_PASSWORD
          value: example-password
        - name: WORDPRESS_DB_USER
          value: root
        ports:
        - name: http
          containerPort: 80
        volumeMounts:
        - name: data
          mountPath: /var/www/html
          subPath: wp
      - image: $IMAGE_UBBAGENT
        name: ubbagent
        env:
        - name: AGENT_CONFIG_FILE
          value: /etc/ubbagent/config.yaml
        - name: AGENT_LOCAL_PORT
          value: "6080"
        - name: AGENT_STATE_DIR
          value: /var/lib/ubbagent
        - name: AGENT_REPORT_DIR
          value: /var/lib/ubbagent/reports
        volumeMounts:
        - name: ubbagent-config
          mountPath: /etc/ubbagent
        - name: ubbagent-state
          mountPath: /var/lib/ubbagent
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: $APP_INSTANCE_NAME-wordpress-pvc
      - name: ubbagent-config
        emptyDir: {}
      # TODO(volkman): state directory should maybe be on a PV.
      - name: ubbagent-state
        emptyDir: {}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: $APP_INSTANCE_NAME-wordpress-pvc
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: wordpress-webserver
spec:
  accessModes: [ReadWriteOnce]
  storageClassName: standard
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: $APP_INSTANCE_NAME-wordpress-svc
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: wordpress-webserver
spec:
  ports:
  - name: http
    port: 80
    targetPort: http
  selector:
    app.kubernetes.io/name: wordpress-1
    app.kubernetes.io/component: wordpress-webserver
  type: LoadBalancer
