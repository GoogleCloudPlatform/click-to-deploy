apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-web
  {{- if .Values.web.annotations }}
  annotations:
    {{- toYaml .Values.web.annotations | nindent 4 }}
  {{- end }}
  labels:
    app: {{ include "airflow.labels.app" . }}
    component: web
    chart: {{ include "airflow.labels.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- if .Values.web.labels }}
    {{- toYaml .Values.web.labels | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.web.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      ## multiple web pods can safely run concurrently
      maxSurge: 25%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ include "airflow.labels.app" . }}
      component: web
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/secret-config-envs: {{ include (print $.Template.BasePath "/config/secret-config-envs.yaml") . | sha256sum }}
        checksum/secret-local-settings: {{ include (print $.Template.BasePath "/config/secret-local-settings.yaml") . | sha256sum }}
        checksum/config-webserver-config: {{ include (print $.Template.BasePath "/config/secret-webserver-config.yaml") . | sha256sum }}
        {{- if .Values.airflow.podAnnotations }}
        {{- toYaml .Values.airflow.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.web.podAnnotations }}
        {{- toYaml .Values.web.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.web.safeToEvict }}
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{- end }}
      labels:
        app: {{ include "airflow.labels.app" . }}
        component: web
        release: {{ .Release.Name }}
        {{- if .Values.web.podLabels }}
        {{- toYaml .Values.web.podLabels | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: Always
      serviceAccountName: {{ include "airflow.serviceAccountName" . }}
      initContainers:
        {{- if .Values.dags.gitSync.enabled }}
        {{- include "airflow.container.git_sync" (dict "Release" .Release "Values" .Values "sync_one_time" "true") | indent 8 }}
        {{- end }}
        {{- include "airflow.init_container.check_db" (dict "Release" .Release "Values" .Values "volumeMounts" $volumeMounts) | indent 8 }}
        {{- include "airflow.init_container.wait_for_db_migrations" (dict "Release" .Release "Values" .Values "volumeMounts" $volumeMounts) | indent 8 }}
      containers:
        - name: airflow-web
          {{- include "airflow.image" . | indent 10 }}
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
          ports:
            - name: web
              containerPort: 8080
              protocol: TCP
          envFrom:
            {{- include "airflow.envFrom" . | indent 12 }}
          env:
            {{- include "airflow.env" . | indent 12 }}
          command:
            {{- include "airflow.command" . | indent 12 }}
          args:
            - "bash"
            - "-c"
            - "exec airflow webserver"
          {{- if .Values.web.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.web.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.web.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.web.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.web.livenessProbe.failureThreshold }}
            httpGet:
              scheme: {{ include "airflow.web.scheme" . }}
              {{- $airflowUrl := .Values.web.webserverBaseUrl  | default "" | printf "%s/health" | urlParse }}
              path: {{ get $airflowUrl "path" }}
              port: web
          {{- end }}
          {{- if .Values.web.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.web.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.web.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.web.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.web.readinessProbe.failureThreshold }}
            httpGet:
              scheme: {{ include "airflow.web.scheme" . }}
              {{- $airflowUrl := .Values.web.webserverBaseUrl | default "" | printf "%s/health" | urlParse }}
              path: {{ get $airflowUrl "path" }}
              port: web
          {{- end }}
          volumeMounts:
            {{- include "airflow.volumeMounts" . | indent 12 }}
            - name: webserver-config
              mountPath: /opt/airflow/webserver_config.py
              subPath: webserver_config.py
              readOnly: true
        {{- if .Values.dags.gitSync.enabled }}
        {{- include "airflow.container.git_sync" . | indent 8 }}
        {{- end }}
      volumes:
        {{- include "airflow.volumes" . | indent 8 }}
        - name: webserver-config
          secret:
            {{- if .Values.web.webserverConfig.existingSecret }}
            secretName: {{ .Values.web.webserverConfig.existingSecret }}
            {{- else }}
            secretName: {{ .Release.Name }}-webserver-config
            {{- end }}
            defaultMode: 0644
