apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: "{{ .Release.Name }}"
  annotations:
    kubernetes-engine.cloud.google.com/icon: >-
      data:image/png;base64,{{ .Files.Get "logo.png" | b64enc }}
    marketplace.cloud.google.com/deploy-info: '{"partner_id": "click-to-deploy-containers", "product_id": "postgresql", "partner_name": "Google Click to Deploy"}'
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
spec:
  descriptor:
    type: Apache Airflow
    version: "{{ .Values.postgresql.image.tag }}"
    description: |-
      Lorem ipsum
    maintainers:
    - name: Google Click to Deploy
      url: https://cloud.google.com/solutions/#click-to-deploy
    links:
    - description: 'User Guide: Google Click to Deploy Apache Airflow'
      url: https://github.com/GoogleCloudPlatform/click-to-deploy/blob/master/k8s/airflow/README.md
    notes: |-
      # Access Airflow
      Lorem Ipsum again
  info:
  - name: Airflow - admin username
    type: Reference
    valueFrom:
      secretKeyRef:
        key: _AIRFLOW_WWW_USER_USERNAME
        name: {{ .Release.Name }}-config-envs
  - name: Airflow - admin e-mail address
    type: Reference
    valueFrom:
      secretKeyRef:
        key: _AIRFLOW_WWW_USER_EMAIL
        name: {{ .Release.Name }}-config-envs
  - name: Airflow - admin user password
    type: Reference
    valueFrom:
      secretKeyRef:
        key: _AIRFLOW_WWW_USER_PASSWORD
        name: {{ .Release.Name }}-config-envs
  - name: PostgreSQL - Airflow user password
    type: Reference
    valueFrom:
      secretKeyRef:
        key: DATABASE_PASSWORD
        name: {{ .Release.Name }}-config-envs
  - name: Airflow - admin user password
    type: Reference
    valueFrom:
      secretKeyRef:
        key: _AIRFLOW_WWW_USER_PASSWORD
        name: {{ .Release.Name }}-config-envs 
  - name: Airflow IP address
    type: Reference
    valueFrom:
      serviceRef:
        name: "{{ .Release.Name }}-airflow-svc"
  - name: Application Namespace
    value: "{{ .Release.Namespace }}"
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}"
  componentKinds:
  - group: apps/v1
    kind: StatefulSet
  - group: v1
    kind: PersistentVolumeClaim
  - group: v1
    kind: Secret
  - group: v1
    kind: Service
  {{ if .Values.enablePublicServiceAndIngress }}
  - group: networking.k8s.io
    kind: Ingress
  {{ end }}
  - group: apps/v1
    kind: Deployment
  - group: v1
    kind: ConfigMap
  - group: v1
    kind: ServiceAccount

