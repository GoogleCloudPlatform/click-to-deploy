---
{{- $secret := (lookup "v1" "Secret" .Release.Namespace (printf "%s-config-envs" .Release.Name)) -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-config-envs
  labels:
    app: {{ include "airflow.labels.app" . }}
    name: {{ .Release.Name }}
## we must use `data` rather than `stringData` (see: https://github.com/helm/helm/issues/10010)
data:
  TZ: {{ "Etc/UTC" | b64enc | quote }}

  DATABASE_PORT: {{ "5432" | b64enc | quote }}
  DATABASE_DB: {{ "airflow" | b64enc | quote }}
  DATABASE_USER: {{ "airflow" | b64enc | quote }}
  {{- if $secret }}
  DATABASE_PASSWORD: {{ $secret.data.DATABASE_PASSWORD }}
  {{- else }}
  DATABASE_PASSWORD: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}

  DATABASE_USER_CMD: {{ `echo "${DATABASE_USER}" | python3 -c "import urllib.parse; encoded_user = urllib.parse.quote(input()); print(encoded_user)"` | b64enc | quote }}
  DATABASE_PASSWORD_CMD: {{ `echo "${DATABASE_PASSWORD}" | python3 -c "import urllib.parse; encoded_pass = urllib.parse.quote(input()); print(encoded_pass)"` | b64enc | quote }}
  DATABASE_SQLALCHEMY_CMD: {{ `echo -n "postgresql+psycopg2://$(eval $DATABASE_USER_CMD):$(eval $DATABASE_PASSWORD_CMD)@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DB}"` | b64enc | quote }}
  DATABASE_CELERY_CMD: {{ `echo -n "db+postgresql://$(eval $DATABASE_USER_CMD):$(eval $DATABASE_PASSWORD_CMD)@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DB}"` | b64enc | quote }}
  DATABASE_PSQL_CMD: {{ `echo -n "postgresql://$(eval $DATABASE_USER_CMD):$(eval $DATABASE_PASSWORD_CMD)@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DB}${DATABASE_PROPERTIES}"` | b64enc | quote }}

  AIRFLOW__CORE__DAGS_FOLDER: {{ "/opt/airflow/dags" | b64enc | quote }}
  AIRFLOW__CORE__EXECUTOR: {{ "KubernetesExecutor" | b64enc | quote }}

  AIRFLOW__CORE__SQL_ALCHEMY_CONN_CMD: {{ `bash -c 'eval "$DATABASE_SQLALCHEMY_CMD"'` | b64enc | quote }}
  {{- if $secret }}
  AIRFLOW__WEBSERVER__SECRET_KEY: {{ $secret.data.AIRFLOW__WEBSERVER__SECRET_KEY }}
  {{- else }}
  AIRFLOW__WEBSERVER__SECRET_KEY: {{ randAlphaNum 16 | b64enc | quote }}
  {{- end }}

  AIRFLOW__WEBSERVER__WEB_SERVER_PORT: {{ "8080" | b64enc | quote }}
  AIRFLOW__WEBSERVER__BASE_URL: {{ "http://localhost:8080" | b64enc | quote }}
  AIRFLOW__TRIGGERER__DEFAULT_CAPACITY: {{ "1000" | b64enc | quote }}

  AIRFLOW__LOGGING__BASE_LOG_FOLDER: {{ "/opt/airflow/logs" | b64enc | quote }}
  AIRFLOW__LOGGING__DAG_PROCESSOR_MANAGER_LOG_LOCATION: {{ "/opt/airflow/logs/dag_processor_manager/dag_processor_manager.log" | b64enc | quote }}
  AIRFLOW__SCHEDULER__CHILD_PROCESS_LOG_DIRECTORY: {{ "/opt/airflow/logs" | b64enc | quote }}

  AIRFLOW__KUBERNETES__NAMESPACE: {{ .Release.Namespace | toString | b64enc | quote }}
  AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY: {{ .Values.airflow.image.repo | toString | b64enc | quote }}
  AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG: {{ .Values.airflow.image.tag | toString | b64enc | quote }}
  AIRFLOW__KUBERNETES__POD_TEMPLATE_FILE: {{ "/opt/airflow/pod_templates/pod_template.yaml" | b64enc | quote }}

  _AIRFLOW_WWW_USER_USERNAME: {{ "airflow_admin" | b64enc | quote }}
  _AIRFLOW_WWW_USER_PASSWORD: {{ .Values.airflow.admin.password | toString | b64enc | quote }}
  _AIRFLOW_WWW_USER_EMAIL: {{ .Values.airflow.admin.email | toString | b64enc | quote }}


