---
apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: "{{ .Release.Name }}"
  annotations:
    kubernetes-engine.cloud.google.com/icon: >-
      data:image/png;base64,{{ .Files.Get "logo.png" | b64enc }}
    marketplace.cloud.google.com/deploy-info: '{"partner_id": "click-to-deploy-containers", "product_id": {{ .Chart.Name | quote }}, "partner_name": "Google Click to Deploy"}'

  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
spec:
  descriptor:
    type: Magento
    version: "{{ .Values.magento.image.tag }}"
    description: >-
      Magento is an extensible and modular e-commerce platform. It enables catalog management, CMS,
      different payment methods, layout control, flexible pricing system and more.

      # Support
      Google does not offer support for this solution. However, community support is available on
      [community forums](https://community.magento.com).

      Additional community support is available on
      [Stack Overflow](https://stackoverflow.com/questions/tagged/magento/).

    maintainers:
    - name: Google Click to Deploy
      url: https://cloud.google.com/solutions/#click-to-deploy
    links:
    - description: 'User Guide: Google Click to Deploy Magento'
      url: https://github.com/GoogleCloudPlatform/click-to-deploy/blob/master/k8s/magento/README.md
    - description: Getting Started with Magento
      url: https://docs.magento.com/m2/ce/user_guide/getting-started.html
    notes: |-
      {{- if .Values.enablePublicServiceAndIngress }}
      # Open your Magento site
      Get the external IP of your Magento site using the following command:

      ```
      SERVICE_IP=$(kubectl get ingress {{ .Release.Name }}-magento-ingress \
        --namespace {{ .Release.Namespace }} \
        --output jsonpath='{.status.loadBalancer.ingress[0].ip}')

      echo "https://${SERVICE_IP}/"
      ```
      The command shows you the URL of your site.

      # Update TLS certificate for Magento
      By default the application used self-signed certificate. You can follow
      [Update TLS certificate for Magento section](https://github.com/GoogleCloudPlatform/click-to-deploy/blob/master/k8s/magento/README.md#update-tls-certificate-for-magento)
      to update it.
      {{- else }}

      # Open your Magento site
      Magento is exposed in a ClusterIP-only service `{{ .Release.Name }}-magento-svc`.
      To connect to Magento UI, you can either expose a public service endpoint or keep it private,
      but connect from you local environment with `kubectl port-forward`.

      ## Forward Magento port in local environment
      You can use port forwarding feature of `kubectl` to forward Magento's port to your local
      machine. Run the following command in background:

      ```shell
      kubectl port-forward \
        --namespace {{ .Release.Namespace }} \
        svc/{{ .Release.Name }}-magento-svc \
        8080:80
      ```
      Now you can access Magento UI with [http://localhost:8080](http://localhost:8080).
      {{- end }}
  info:
  {{- if .Values.enablePublicServiceAndIngress }}
  - name: Magento - Site address
    type: Reference
    valueFrom:
      ingressRef:
        name: {{ .Release.Name }}-magento-ingress
        protocol: {{ include "ingress.protocol" . | trim }}
  - name: Magento - Admin address
    type: Reference
    valueFrom:
      ingressRef:
        name: {{ .Release.Name }}-magento-ingress
        path: /admin
        protocol: {{ include "ingress.protocol" . | trim }}
  {{- else }}
  - name: Forward Magento port locally
    value: kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ .Release.Name }}-magento-svc 8080:80
  - name: Magento - Site address (local only)
    value: http://localhost:8080/
  - name: Magento - Admin address (local only)
    value: http://localhost:8080/admin
  {{- end }}
  - name: Magento - Administrator username
    type: Reference
    valueFrom:
      secretKeyRef:
        key: magento-user
        name: {{ .Release.Name }}-magento-secret
  - name: Magento - Administrator e-mail address
    type: Reference
    valueFrom:
      secretKeyRef:
        key: magento-email
        name: {{ .Release.Name }}-magento-secret
  - name: Magento - Administrator password
    type: Reference
    valueFrom:
      secretKeyRef:
        key: magento-password
        name: {{ .Release.Name }}-magento-secret
  - name: MySQL - root user password
    type: Reference
    valueFrom:
      secretKeyRef:
        key: root-password
        name: {{ .Release.Name }}-mysql-secret
  - name: MySQL - magento user password
    type: Reference
    valueFrom:
      secretKeyRef:
        key: magento-password
        name: {{ .Release.Name }}-mysql-secret
  - name: Redis - Server password
    type: Reference
    valueFrom:
      secretKeyRef:
        key: password
        name: {{ .Release.Name }}-redis-secret
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}"
  componentKinds:
  - group: v1
    kind: PersistentVolumeClaim
  - group: apps/v1beta2
    kind: StatefulSet
  - group: v1
    kind: Secret
  - group: v1
    kind: Service
  {{- if .Values.enablePublicServiceAndIngress }}
  - group: extensions/v1beta1
    kind: Ingress
  {{- end }}
  - group: v1
    kind: ConfigMap
