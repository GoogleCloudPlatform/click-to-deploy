---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-magento
  labels: &MagentoDeploymentLabels
    app.kubernetes.io/name: "{{ .Release.Name }}"
    app.kubernetes.io/component: magento-webserver
spec:
  replicas: 1
  serviceName: {{ .Release.Name }}-magento-svc
  selector:
    matchLabels: *MagentoDeploymentLabels
  template:
    metadata:
      labels: *MagentoDeploymentLabels
    spec:
      containers:
      - name: magento
        image: "{{ .Values.magento.image.repo }}:{{ .Values.magento.image.tag }}"
        imagePullPolicy: Always
        env:
        # Redis Settings
        - name: MAGENTO_REDIS_HOST
          value: "{{ .Release.Name }}-redis-svc.{{ .Release.Namespace }}.svc"
        - name: MAGENTO_REDIS_PORT
          value: "6379"
        - name: MAGENTO_REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-redis-secret
              key: password
        # MySQL Endpoint
        - name: MAGENTO_MYSQL_HOST
          value: "{{ .Release.Name }}-mysql-svc.{{ .Release.Namespace }}.svc"
        # Elasticsearch Settings
        - name: MAGENTO_ELASTICSEARCH_HOST
          value: "{{ .Release.Name }}-elasticsearch-svc.{{ .Release.Namespace }}.svc"
        - name: MAGENTO_ELASTICSEARCH_PORT
          value: "9200"
        # MySQL App User Credentials
        - name: MAGENTO_MYSQL_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-magento-secret
              key: magento-mysql-username
        - name: MAGENTO_MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-magento-secret
              key: magento-mysql-password
        # Magento Administrator User
        - name: MAGENTO_ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-magento-secret
              key: magento-admin-username
        - name: MAGENTO_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-magento-secret
              key: magento-admin-password
        - name: MAGENTO_ADMIN_EMAIL
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-magento-secret
              key: magento-admin-email
        - name: ENABLE_CRONJOBS
          value: "true"
        ports:
        - name: http
          containerPort: 80
        - name: nginx-stub
          containerPort: 8080
        volumeMounts:
        - name: {{ .Release.Name }}-magento-pvc
          mountPath: /app
        resources:
          limits:
            memory: "2G"
          requests:
            memory: "2G"
            cpu: "800m"
        readinessProbe:
          httpGet:
            path: /health_check.php
            port: 80
          initialDelaySeconds: 270
          periodSeconds: 10
          timeoutSeconds: 60
          successThreshold: 2
          failureThreshold: 30
        livenessProbe:
          httpGet:
            path: /health_check.php
            port: 80
          initialDelaySeconds: 270
          timeoutSeconds: 30
      - name: nginx-exporter
        image: {{ .Values.nginx.exporter.image }}
        env:
        - name: SCRAPE_URI
          value: http://localhost:8080/stub_status
        - name: NGINX_RETRY_INTERVAL
          value: "10s"
        - name: NGINX_RETRIES
          value: "40"
        ports:
        - name: nginx-exporter
          containerPort: 9113
        resources:
          requests:
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9113
          initialDelaySeconds: 270
          periodSeconds: 10
          timeoutSeconds: 30
          failureThreshold: 30
        readinessProbe:
          httpGet:
            path: /metrics
            port: 9113
          initialDelaySeconds: 270
          periodSeconds: 10
          timeoutSeconds: 30
          failureThreshold: 30
      # Prometheus to Stackdriver Container
      {{- if .Values.metrics.exporter.enabled }}
      - name: prometheus-to-sd
        image: {{ .Values.metrics.image }}
        command:
        - /monitor
        - --stackdriver-prefix=custom.googleapis.com
        - --source=nginx-magento:http://localhost:9113/metrics
        - --pod-id=$(POD_NAME)
        - --namespace-id=$(POD_NAMESPACE)
        - --monitored-resource-types=k8s
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: "100m"
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-magento-pvc
      labels:
        app.kubernetes.io/name: "{{ .Release.Name }}"
        app.kubernetes.io/component: magento-webserver
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.persistence.storageClass | quote }}
      resources:
        requests:
          storage: {{ .Values.magento.persistence.size | quote }}
