---
# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventing-controller
  namespace: "{{ .Release.Namespace }}"
  labels:
    eventing.knative.dev/release: "v1.9.0"
    knative.dev/high-availability: "true"
    app.kubernetes.io/component: eventing-controller
    app.kubernetes.io/version: "1.9.0"
    app.kubernetes.io/name: knative-eventing
spec:
  selector:
    matchLabels:
      app: eventing-controller
  template:
    metadata:
      labels:
        app: eventing-controller
        eventing.knative.dev/release: "v1.9.0"
        app.kubernetes.io/component: eventing-controller
        app.kubernetes.io/version: "1.9.0"
        app.kubernetes.io/name: knative-eventing
    spec:
      # To avoid node becoming SPOF, spread our replicas to different nodes.
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: eventing-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
      serviceAccountName: eventing-controller
      enableServiceLinks: false
      containers:
        - name: eventing-controller
          terminationMessagePolicy: FallbackToLogsOnError
          image: {{ .Values.knative.eventing.controller.image.repo }}:{{ .Values.knative.eventing.controller.image.tag }}
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/eventing
            # APIServerSource
            - name: APISERVER_RA_IMAGE
              value: gcr.io/knative-releases/knative.dev/eventing/cmd/apiserver_receive_adapter@sha256:26a20c0b8894bc6d84266f245e1a4effa2ce61e88d8cd00edb8f94e140b988ba
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
                  ##         Adapter settings
                  #          - name: K_LOGGING_CONFIG
                  #            value: ''
                  #          - name: K_LEADER_ELECTION_CONFIG
                  #            value: ''
                  #          - name: K_NO_SHUTDOWN_AFTER
                  #            value: ''
                  ##           Time in seconds the adapter will wait for the sink to respond. Default is no timeout
                  #          - name: K_SINK_TIMEOUT
                  #            value: ''
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          livenessProbe:
            httpGet:
              path: /health
              port: probes
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /readiness
              port: probes
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
            - name: probes
              containerPort: 8080
