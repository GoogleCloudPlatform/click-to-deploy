actions:
- name: kubectl smoke test
  bashTest:
    script: kubectl version
    expect:
      exitCode:
        equals: 0
- name: Wait for the istio ingressgateway get ready
  bashTest:
    script: kubectl wait --for=condition=Available=True --timeout=120s --namespace $NAMESPACE deploy istio-ingressgateway
    expect:
      exitCode:
        equals: 0
- name: Create helloworld app and service
  bashTest:
    script: |
      kubectl apply --namespace $NAMESPACE -f - <<EOF
      apiVersion: v1
      kind: Service
      metadata:
        name: helloworld-test
        labels:
          app: helloworld-test
      spec:
        ports:
        - port: 5000
          name: http
        selector:
          app: helloworld-test
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: helloworld-test
        labels:
          app: helloworld-test
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: helloworld-test
        template:
          metadata:
            labels:
              app: helloworld-test
          spec:
            containers:
            - name: helloworld
              image: docker.io/istio/examples-helloworld-v1
              ports:
              - containerPort: 5000
      EOF
    expect:
      exitCode:
        equals: 0
- name: Create helloworld virtualservice
  bashTest:
    script: |
      kubectl apply --namespace $NAMESPACE -f - <<EOF
      apiVersion: networking.istio.io/v1alpha3
      kind: VirtualService
      metadata:
        name: helloworld-test
      spec:
        hosts:
        - "*"
        gateways:
        - knative-ingress-gateway
        http:
        - match:
          - uri:
              exact: /hello
          route:
          - destination:
              host: helloworld-test
              port:
                number: 5000
      EOF
    expect:
      exitCode:
        equals: 0
- name: Try to get responce from ingress
  bashTest:
    script: |
      export INGRESS_GATEWAY=$(kubectl get svc istio-ingressgateway \
      --namespace $NAMESPACE \
      -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
      echo $INGRESS_GATEWAY
      kubectl wait --for=condition=Available=True --timeout=60s --namespace $NAMESPACE deploy helloworld-test
      export DEBUG_E=$(kubectl describe --namespace $NAMESPACE virtualservice helloworld-test && \
      kubectl describe --namespace $NAMESPACE service helloworld-test && \
      kubectl describe --namespace $NAMESPACE deploy helloworld-test && \
      curl -s -iv -H 'Host: helloworld-test' $INGRESS_GATEWAY/hello 2>&1)
      echo $DEBUG_E
      curl -s -H 'Host: helloworld-test' $INGRESS_GATEWAY/hello | grep -qz 'instance: helloworld-test'
    expect:
      exitCode:
        equals: 0
- name: Delete app and service
  bashTest:
    script: |
      kubectl delete --namespace $NAMESPACE virtualservice helloworld-test
      kubectl delete --namespace $NAMESPACE service helloworld-test
      kubectl delete --namespace $NAMESPACE deploy helloworld-test
    expect:
      exitCode:
        equals: 0
- name: wait for 10 minutes
  bashTest:
    script: sleep 600s
    expect:
      exitCode:
        equals: 0

