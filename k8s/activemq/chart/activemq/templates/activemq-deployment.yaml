apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-activemq
  labels: &ActivemqDeploymentLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: activemq-broker
spec:
  strategy:
    type: Recreate
  # `replicas` is hardcoded to `1`, because solution is not scalable.
  replicas: 1
  selector:
    matchLabels: *ActivemqDeploymentLabels
  template:
    metadata:
      labels: *ActivemqDeploymentLabels
    spec:
      securityContext:
        fsGroup: 1000
      containers:
      - image: {{ .Values.image.repo }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: activemq
        resources:
          requests:
            memory: 130Mi
            cpu: 10m
        env:
        - name: ACTIVEMQ_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-activemq-secret
              key: console-password
        - name: DEBUG_DOCKER_ENTERYPOINT
          value: {{ .Values.enableBashDebug | quote }}
        ports:
        - containerPort: 61616
          name: activemq-tcp
        - containerPort: 8161
          name: activemq-ui
        - containerPort: 5672
          name: activemq-amqp
        - containerPort: 61613
          name: activemq-stomp
        - containerPort: 1883
          name: activemq-mqtt
        - containerPort: 61614
          name: activemq-ws
        volumeMounts:
        - name: activemq-data
          mountPath: /opt/activemq/data
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        livenessProbe:
          tcpSocket:
            port: activemq-ui
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: activemq-tcp
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: activemq-data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-activemq
      restartPolicy: Always
