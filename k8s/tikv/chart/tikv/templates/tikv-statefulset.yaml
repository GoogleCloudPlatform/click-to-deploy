---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-tikv
  labels: &tikvLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: tikv-server
spec:
  podManagementPolicy: Parallel
  replicas: {{ .Values.tikv.replicas }}
  selector:
    matchLabels: *tikvLabels
  serviceName: {{ .Release.Name }}-tikv-peer
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "20180"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
      labels: *tikvLabels
    spec:
      containers:
      - name: {{ .Release.Name }}-tikv
        image: {{ .Values.tikv.image.repo }}:{{ .Values.tikv.image.tag }}
        imagePullPolicy: Always
        ports:
        - name: server
          containerPort: 20160
        - name: status
          containerPort: 20180
        command:
        - /tikv-server
        - --addr=0.0.0.0:20160
        - --advertise-addr=$(POD_NAME).{{ .Release.Name }}-tikv-peer:20160
        - --status-addr=0.0.0.0:20180
        - --advertise-status-addr=$(POD_NAME).{{ .Release.Name }}-tikv-peer:20180
        - --data-dir=/data/db
        - --capacity=0
        - --config=/etc/tikv/tikv.toml
        - --pd={{ .Release.Name }}-pd:2379
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: {{ .Release.Name }}-data-pvc
          mountPath: /data/db
        - mountPath: /etc/tikv
          name: config
          readOnly: true
      {{ if .Values.metrics.exporter.enabled }}
      - name: stackdriver-exporter
        image: {{ .Values.metrics.image }}
        ports:
        - name: profiler
          containerPort: 6060
        command:
        - /monitor
        - --stackdriver-prefix=custom.googleapis.com
        - --source=tikv:http://localhost:20180/metrics
        - --pod-id=$(POD_NAME)
        - --namespace-id=$(POD_NAMESPACE)
        - --monitored-resource-types=k8s
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      {{ end }}
      volumes:
      - name: config
        configMap:
          defaultMode: 420
          items:
          - key: config-file
            path: tikv.toml
          name: {{ .Release.Name }}-tikv-config
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-data-pvc
      labels: *tikvLabels
    spec:
      resources:
        requests:
          storage: {{ .Values.tikv.persistence.size }}
      accessModes:
      - ReadWriteOnce
      storageClassName: {{ .Values.tikv.persistence.storageClass }}

