---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-superset
  labels: &supersetDeploymentLabels
    app.kubernetes.io/name: "{{ .Release.Name }}"
    app.kubernetes.io/component: apache-superset
spec:
  serviceName: {{ .Release.Name }}-superset-svc
  selector:
    matchLabels: *supersetDeploymentLabels
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels: *supersetDeploymentLabels
    spec:
      initContainers:
      - name: check-db
        image: {{ .Values.postgresql.image }}
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c',
          'until pg_isready -h {{ .Release.Name }}-postgresql-service -p 5432;
          do echo waiting for database; sleep 2; done;']
      containers:
      - image: {{ .Values.superset.image.repo }}:{{ .Values.superset.image.tag }}
        name: superset
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        # A superset's password.
        - name: SUPERSET_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-superset-secret
              key: superset-password
        # A hostname of Postgresql service.
        - name: DATABASE_HOST
          value: {{ .Release.Name }}-postgres-svc
        - name: PYTHONPATH
          value: "/etc/superset"
        ports:
        - containerPort: 8088
          name: superset-port
        livenessProbe:
          httpGet:
            path: /health
            port: 8088
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8088
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 6
        volumeMounts:
           - name: config-volume
             mountPath: /etc/superset
      - name: statsd-exporter
        image: {{ .Values.statsd.exporter.image }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: exporter
          containerPort: 9102
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9102
        readinessProbe:
          httpGet:
            path: /metrics
            port: 9102
      {{ if .Values.metrics.exporter.enabled }}
      - name: prometheus-to-sd
        image: {{ .Values.metrics.image }}
        ports:
        - name: profiler
          containerPort: 6060
        command:
          - /monitor
          - --stackdriver-prefix=custom.googleapis.com
          - --source=superset-statsd:http://localhost:9102/metrics
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          - --monitored-resource-type-prefix=k8s_
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      {{ end }}
      volumes:
        - name: config-volume
          configMap:
            name: superset-configmap
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-superset-pvc
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: {{ .Values.superset.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.superset.persistence.size }}
