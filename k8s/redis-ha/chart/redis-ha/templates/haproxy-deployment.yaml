kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "redis-ha.fullname" . }}-haproxy
  labels: &HAProxyDeploymentLabels
    app.kubernetes.io/name: "{{ .Release.Name }}"
    app: {{ template "redis-ha.name" . }}-haproxy
spec:
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 1
  replicas: {{ .Values.haproxy.replicas }}
  selector:
    matchLabels: *HAProxyDeploymentLabels
  template:
    metadata:
      name: {{ template "redis-ha.fullname" . }}-haproxy
      annotations:
        prometheus.io/port: "9101"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
      labels: *HAProxyDeploymentLabels
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: {{ template "redis-ha.name" . }}-haproxy
                  release: {{ .Release.Name }}
              topologyKey: kubernetes.io/hostname
      initContainers:
      - name: config-init
        image: {{ .Values.haproxy.image }}
        resources:
          requests:
            memory: 50m
            cpu: 100m
        command:
        - sh
        args:
        - /readonly/haproxy_init.sh
        {{- if .Values.enableAuth }}
        env:
        - name: AUTH
          valueFrom:
            secretKeyRef:
              name: {{ template "redis-ha.fullname" . }}
              key: auth
        {{- end }}
        volumeMounts:
        - name: config-volume
          mountPath: /readonly
          readOnly: true
        - name: data
          mountPath: /data
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
        runAsNonRoot: true
      containers:
      - name: haproxy
        image: {{ .Values.haproxy.image }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 3
        ports:
        - name: redis
          containerPort: 6379
        - name: readonly-port
          containerPort: 6380
        - name: metrics-port
          containerPort: 9101
        resources:
          requests:
            memory: 100m
            cpu: 100m
        volumeMounts:
        - name: data
          mountPath: /usr/local/etc/haproxy
        - name: shared-socket
          mountPath: /run/haproxy
      {{- if .Values.metrics.exporter.enabled }}
      - name: prometheus-to-sd
        image: {{ .Values.metrics.image }}
        command:
        - /monitor
        - --stackdriver-prefix=custom.googleapis.com
        - --source=haproxy:http://localhost:9101/metrics
        - --pod-id=$(POD_NAME)
        - --namespace-id=$(POD_NAMESPACE)
        - --monitored-resource-types=k8s
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      {{- end }}
      volumes:
      - name: config-volume
        configMap:
          name: {{ template "redis-ha.fullname" . }}-configmap
      - name: shared-socket
        emptyDir: {}
      - name: data
        emptyDir: {}
