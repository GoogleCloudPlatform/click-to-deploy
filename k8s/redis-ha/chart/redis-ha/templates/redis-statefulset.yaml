apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "redis-ha.fullname" . }}-server
  labels: &RedisHADeploymentLabels
    app.kubernetes.io/name: "{{ .Release.Name }}"
    app: {{ template "redis-ha.name" . }}
    {{ template "redis-ha.fullname" . }}: replica
spec:
  selector:
    matchLabels: *RedisHADeploymentLabels
  serviceName: {{ template "redis-ha.fullname" . }}
  replicas: {{ .Values.redis.replicas }}
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9121"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
      labels: *RedisHADeploymentLabels
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: "{{ .Release.Name }}"
                  app: {{ template "redis-ha.name" . }}
                  {{ template "redis-ha.fullname" . }}: replica
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
        runAsNonRoot: true
      initContainers:
      - name: config-init
        image: {{ .Values.redis.image.repo }}:{{ .Values.redis.image.tag }}
        resources:
          requests:
            memory: 10m
            cpu: 100m
        command:
        - sh
        args:
        - /readonly-config/init.sh
        env:
        {{- $replicas := int (toString .Values.redis.replicas) -}}
        {{- range $i := until $replicas }}
        - name: SENTINEL_ID_{{ $i }}
          value: {{ printf "%s\n%s\nindex: %d" (include "redis-ha.name" $) ($.Release.Name) $i | sha1sum }}
        {{- end -}}
        {{- if .Values.enableAuth }}
        - name: AUTH
          valueFrom:
            secretKeyRef:
              name: {{ template "redis-ha.fullname" . }}
              key: auth
        {{- end }}
        volumeMounts:
        - name: config
          mountPath: /readonly-config
          readOnly: true
        - name: {{ template "redis-ha.fullname" . }}-data
          mountPath: /data
      containers:
      - name: redis
        image: {{ .Values.redis.image.repo }}:{{ .Values.redis.image.tag }}
        command:
        - redis-server
        args:
        - /data/conf/redis.conf
        env:
        {{- if .Values.enableAuth }}
        - name: AUTH
          valueFrom:
            secretKeyRef:
              name: {{ template "redis-ha.fullname" . }}
              key: auth
        {{- end }}
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 15
        resources:
          requests:
            memory: 200Mi
            cpu: 100m
        ports:
        - name: redis
          containerPort: 6379
        volumeMounts:
        - mountPath: /data
          name: {{ template "redis-ha.fullname" . }}-data
      - name: sentinel
        image: {{ .Values.redis.image.repo }}:{{ .Values.redis.image.tag }}
        command:
          - redis-sentinel
        args:
          - /data/conf/sentinel.conf
        {{- if .Values.enableAuth }}
        env:
        - name: AUTH
          valueFrom:
            secretKeyRef:
              name: {{ template "redis-ha.fullname" . }}
              key: auth
        {{- end }}
        livenessProbe:
          tcpSocket:
            port: 26379
          initialDelaySeconds: 15
        resources:
          requests:
            memory: 200Mi
            cpu: 100m
        ports:
          - name: sentinel
            containerPort: 26379
        volumeMounts:
        - mountPath: /data
          name: {{ template "redis-ha.fullname" . }}-data
      - name: redis-exporter
        image: "{{ .Values.redis.exporter.image }}"
        env:
          - name: REDIS_ADDR
            value: redis://localhost:6379
        {{- if .Values.enableAuth }}
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "redis-ha.fullname" . }}
                key: auth
        {{- end }}
        livenessProbe:
          httpGet:
            path: "/metrics"
            port: 9121
          initialDelaySeconds: 15
          timeoutSeconds: 1
          periodSeconds: 15
        resources:
          requests:
            memory: 50m
            cpu: 100m
        ports:
          - name: exporter-port
            containerPort: 9121
      {{- if .Values.metrics.exporter.enabled }}
      - name: prometheus-to-sd
        image: {{ .Values.metrics.image }}
        command:
        - /monitor
        - --stackdriver-prefix=custom.googleapis.com
        - --source=redis:http://localhost:9121/metrics
        - --pod-id=$(POD_NAME)
        - --namespace-id=$(POD_NAMESPACE)
        - --monitored-resource-types=k8s
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ template "redis-ha.fullname" . }}-configmap
  volumeClaimTemplates:
  - metadata:
      name: {{ template "redis-ha.fullname" . }}-data
      labels:
        app.kubernetes.io/name: "{{ .Release.Name }}"
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.redis.persistence.size | quote }}
