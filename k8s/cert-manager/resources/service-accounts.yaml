# CRD creator service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: $CRD_SERVICE_ACCOUNT
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: $CRD_SERVICE_ACCOUNT-role
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get","list","create","update","patch"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
  verbs: ["get","list","create","update","patch"]
- apiGroups: ["app.k8s.io"]
  resources: ["applications"]
  verbs: ["get","list","patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: $CRD_SERVICE_ACCOUNT-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: $CRD_SERVICE_ACCOUNT-role
subjects:
- kind: ServiceAccount
  name: $CRD_SERVICE_ACCOUNT
  namespace: $NAMESPACE
---

# Controller service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: $CONTROLLER_SERVICE_ACCOUNT
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: $CONTROLLER_SERVICE_ACCOUNT-role
rules:
# Issuer controller role
- apiGroups: ["cert-manager.io"]
  resources: ["issuers", "issuers/status"]
  verbs: ["update"]
- apiGroups: ["cert-manager.io"]
  resources: ["issuers"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
# ClusterIssuer controller role
- apiGroups: ["cert-manager.io"]
  resources: ["clusterissuers", "clusterissuers/status"]
  verbs: ["update"]
- apiGroups: ["cert-manager.io"]
  resources: ["clusterissuers"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
# Certificates controller role
- apiGroups: ["cert-manager.io"]
  resources: ["certificates", "certificates/status", "certificaterequests", "certificaterequests/status"]
  verbs: ["update"]
- apiGroups: ["cert-manager.io"]
  resources: ["certificates", "certificaterequests", "clusterissuers", "issuers"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: ["cert-manager.io"]
  resources: ["certificates/finalizers", "certificaterequests/finalizers"]
  verbs: ["update"]
- apiGroups: ["acme.cert-manager.io"]
  resources: ["orders"]
  verbs: ["create", "delete", "get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
# Orders controller role
- apiGroups: ["acme.cert-manager.io"]
  resources: ["orders", "orders/status"]
  verbs: ["update"]
- apiGroups: ["acme.cert-manager.io"]
  resources: ["orders", "challenges"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["cert-manager.io"]
  resources: ["clusterissuers", "issuers"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["acme.cert-manager.io"]
  resources: ["challenges"]
  verbs: ["create", "delete"]
- apiGroups: ["acme.cert-manager.io"]
  resources: ["orders/finalizers"]
  verbs: ["update"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
# Challenges controller role
- apiGroups: ["acme.cert-manager.io"]
  resources: ["challenges", "challenges/status"]
  verbs: ["update"]
- apiGroups: ["acme.cert-manager.io"]
  resources: ["challenges"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["cert-manager.io"]
  resources: ["issuers", "clusterissuers"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list", "watch", "create", "delete"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch", "create", "delete", "update"]
- apiGroups: ["acme.cert-manager.io"]
  resources: ["challenges/finalizers"]
  verbs: ["update"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
# ingress-shim controller role
- apiGroups: ["cert-manager.io"]
  resources: ["certificates", "certificaterequests"]
  verbs: ["create", "update", "delete"]
- apiGroups: ["cert-manager.io"]
  resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources: ["ingresses/finalizers"]
  verbs: ["update"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: $CONTROLLER_SERVICE_ACCOUNT-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: $CONTROLLER_SERVICE_ACCOUNT-role
subjects:
- kind: ServiceAccount
  name: $CONTROLLER_SERVICE_ACCOUNT
  namespace: $NAMESPACE
---

# Operator service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: $WEBHOOK_SERVICE_ACCOUNT
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: $WEBHOOK_SERVICE_ACCOUNT-role
rules:
- apiGroups:
  - admission.cert-manager.io
  resources:
  - certificates
  - certificaterequests
  - issuers
  - clusterissuers
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: $WEBHOOK_SERVICE_ACCOUNT-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: $WEBHOOK_SERVICE_ACCOUNT-role
subjects:
- kind: ServiceAccount
  name: $WEBHOOK_SERVICE_ACCOUNT
  namespace: $NAMESPACE
---

# Cainjector service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: $CAINJECTOR_SERVICE_ACCOUNT
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: $CAINJECTOR_SERVICE_ACCOUNT-role
rules:
- apiGroups: ["cert-manager.io"]
  resources: ["certificates"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "create", "update", "patch"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["apiregistration.k8s.io"]
  resources: ["apiservices"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: $CAINJECTOR_SERVICE_ACCOUNT-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: $CAINJECTOR_SERVICE_ACCOUNT-role
subjects:
- kind: ServiceAccount
  name: $CAINJECTOR_SERVICE_ACCOUNT
  namespace: $NAMESPACE
