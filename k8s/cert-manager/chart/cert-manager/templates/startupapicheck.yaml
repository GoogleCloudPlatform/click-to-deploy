---
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: cert-manager-startupapicheck
  namespace: "{{ .Release.Namespace }}"
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-5"
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/component: "startupapicheck"

---
# create certificate role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cert-manager-startupapicheck:create-cert
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/component: "startupapicheck"
  annotations:
    helm.sh/hook: "post-install"
    helm.sh/hook-delete-policy: "before-hook-creation,hook-succeeded"
    helm.sh/hook-weight: "-5"
rules:
- apiGroups: ["cert-manager.io"]
  resources: ["certificates"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cert-manager-startupapicheck:create-cert
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/component: "startupapicheck"

  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-5"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cert-manager-startupapicheck:create-cert
subjects:
  - kind: ServiceAccount
    name: cert-manager-startupapicheck
    namespace: default
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cert-manager-startupapicheck
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: startupapicheck
    app.kubernetes.io/name: startupapicheck
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/component: "startupapicheck"

  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "1"
spec:
  backoffLimit: 4
  template:
    metadata:
      labels:
        app: startupapicheck
        app.kubernetes.io/name: startupapicheck
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/component: "startupapicheck"

    spec:
      restartPolicy: OnFailure
      serviceAccountName: cert-manager-startupapicheck
      securityContext:
        runAsNonRoot: true
        fsGroup: 1000
        runAsUser: 1000
      containers:
        - name: cert-manager
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["/app/cmctl"]
          imagePullPolicy: IfNotPresent
          args:
          - check
          - api
          - --wait=1m
