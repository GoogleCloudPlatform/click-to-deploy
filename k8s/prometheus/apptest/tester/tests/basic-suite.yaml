actions:

- name: Wait 60s to let Prometheus collect metrics
  bashTest:
    script: |-
      sleep 60
    expect:
      exitCode:
        equals: 0

- name: Prometheus UI is available
  bashTest:
    script: |-
      curl -s -f "${PROMETHEUS_URL}/graph"
    expect:
      stdout:
        contains: <title>Prometheus Time Series Collection and Processing Server</title>

- name: Prometheus metrics for its own StatefulSets are available
  bashTest:
    script: |-
      query="kube_statefulset_replicas\{app_kubernetes_io_name=\"${APP_INSTANCE_NAME}\"\}"
      metrics_found="$(curl -s "${PROMETHEUS_URL}/api/v1/query?query=${query}" \
        | jq '.data.result' | jq length)"
      if [[ "${metrics_found}" -gt 0 ]]; then
        echo "OK - Prometheus StatefulSets metrics found"
      else
        echo "FAIL - no Prometheus StatefulSets metrics found"
      fi
    expect:
      stdout:
        equals: OK - Prometheus StatefulSets metrics found

- name: Log in successfully to Grafana
  bashTest:
    script: |-
      curl -s -f "${GRAFANA_URL}/?orgId=1"
    expect:
      stdout:
        contains: <title>Grafana</title>

- name: Kubernetes Capacity Planning dashboard is available
  bashTest:
    script: |-
      search_grafana_dash_db 'Kubernetes Capacity Planning'
    expect:
      stdout:
        contains: '"title":"Kubernetes Capacity Planning"'

- name: Kubernetes Cluster Health dashboard is available
  bashTest:
    script: |-
      search_grafana_dash_db 'Kubernetes Cluster Health'
    expect:
      stdout:
        contains: '"title":"Kubernetes Cluster Health"'

- name: Deployments dashboard is available
  bashTest:
    script: |-
      search_grafana_dash_db 'Deployments'
    expect:
      stdout:
        contains: '"title":"Deployments"'

- name: K8s / Compute Resources / Cluster dashboard is available
  bashTest:
    script: |-
      search_grafana_dash_db 'K8s / Compute Resources / Cluster'
    expect:
      stdout:
        contains: '"title":"K8s / Compute Resources / Cluster"'

- name: K8s / Compute Resources / Namespace dashboard is available
  bashTest:
    script: |-
      search_grafana_dash_db 'K8s / Compute Resources / Namespace'
    expect:
      stdout:
        contains: '"title":"K8s / Compute Resources / Namespace"'

- name: K8s / Compute Resources / Pod dashboard is available
  bashTest:
    script: |-
      search_grafana_dash_db 'K8s / Compute Resources / Pod'
    expect:
      stdout:
        contains: '"title":"K8s / Compute Resources / Pod"'

- name: K8s / USE Method / Cluster dashboard is available
  bashTest:
    script: |-
      search_grafana_dash_db 'K8s / USE Method / Cluster'
    expect:
      stdout:
        contains: '"title":"K8s / USE Method / Cluster"'

- name: K8s / USE Method / Node dashboard is available
  bashTest:
    script: |-
      search_grafana_dash_db 'K8s / USE Method / Node'
    expect:
      stdout:
        contains: '"title":"K8s / USE Method / Node"'

- name: KubeDNS dashboard is available
  bashTest:
    script: |-
      search_grafana_dash_db 'KubeDNS'
    expect:
      stdout:
        contains: '"title":"KubeDNS"'

- name: Kubelet dashboard is available
  bashTest:
    script: |-
      search_grafana_dash_db 'Kubelet'
    expect:
      stdout:
        contains: '"title":"Kubelet"'

- name: Nodes dashboard is available
  bashTest:
    script: |-
      search_grafana_dash_db 'Nodes'
    expect:
      stdout:
        contains: '"title":"Nodes"'

- name: Pods dashboard is available
  bashTest:
    script: |-
      search_grafana_dash_db 'Pods'
    expect:
      stdout:
        contains: '"title":"Pods"'

- name: StatefulSets dashboard is available
  bashTest:
    script: |-
      curl -s "${GRAFANA_SEARCH_API_URL}?type=dash-db&query=StatefulSets"
    expect:
      stdout:
        contains: '"title":"StatefulSets"'
