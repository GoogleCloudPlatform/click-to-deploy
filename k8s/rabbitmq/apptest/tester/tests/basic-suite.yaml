actions:
- name: RabbitMQ test
  bashTest:
    script: |-
      SERVICE="${APP_INSTANCE_NAME}-rabbitmq-svc.${NAMESPACE}.svc.cluster.local"

      USERNAME=$(kubectl get sts -oyaml \
        --namespace "${NAMESPACE}" "${APP_INSTANCE_NAME}-rabbitmq" | \
        grep -A1 name:.RABBITMQ_DEFAULT_USER | sed -n '/value: /s/.* //p')

      PASSWORD=$(kubectl get secret "${APP_INSTANCE_NAME}-rabbitmq-secret" \
        --namespace "${NAMESPACE}" \
        --output=jsonpath='{.data.rabbitmq-pass}' | base64 -d)

      wget -t3 "http://${SERVICE}:15672/cli/rabbitmqadmin"
      chmod +x rabbitmqadmin

      MESSAGE='simple message'
      ./rabbitmqadmin -u"${USERNAME}" -p"${PASSWORD}" -H"${SERVICE}" declare queue name=testq durable=false 2>&1
      echo -n "${MESSAGE}" | ./rabbitmqadmin -u"${USERNAME}" -p"${PASSWORD}" -H"${SERVICE}" publish routing_key=testq
      if ! ./rabbitmqadmin -u"${USERNAME}" -p"${PASSWORD}" -H"${SERVICE}" get queue=testq | grep -q "${MESSAGE}"; then
        exit 1
      fi
    expect:
      exitCode:
        equals: 0
- name: Is RabbitMQ api/metrics HTTP endpoint working
  bashTest:
    script: curl -f "http://$APP_INSTANCE_NAME-rabbitmq-svc:15672/api/metrics"
    expect:
      stdout:
        contains: '# TYPE rabbitmq_consumers gauge'
      exitCode:
        equals: 0
