---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: $APP_INSTANCE_NAME-elasticsearch
  labels: &ElasticsearchDeploymentLabels
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: elasticsearch-server
spec:
  selector:
    matchLabels: *ElasticsearchDeploymentLabels
  serviceName: $APP_INSTANCE_NAME-elasticsearch-svc
  replicas: 1
  template:
    metadata:
      labels: *ElasticsearchDeploymentLabels
    spec:
      terminationGracePeriodSeconds: 180
      containers:
      - name: elasticsearch
        image: launcher.gcr.io/google/elasticsearch5:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 9200
        - name: tcp-transport
          containerPort: 9300
        volumeMounts:
        - name: $APP_INSTANCE_NAME-elasticsearch-pvc
          mountPath: /usr/share/elasticsearch/data
  volumeClaimTemplates:
  - metadata:
      name: $APP_INSTANCE_NAME-elasticsearch-pvc
      labels:
        app: $APP_INSTANCE_NAME
        app.kubernetes.io/component: elasticsearch-server
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: $APP_INSTANCE_NAME-elasticsearch-svc
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: elasticsearch-server
spec:
  ports:
  - name: http
    port: 9200
  - name: tcp-transport
    port: 9300
  selector:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: elasticsearch-server
  type: LoadBalancer
