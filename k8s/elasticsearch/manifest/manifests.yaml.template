apiVersion: v1
kind: ConfigMap
metadata:
  name: $APP_INSTANCE_NAME-configmap
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: elasticsearch-server
data:
  elasticsearch.yml: |
    cluster.name: "${CLUSTER_NAME}"
    node.name: "${NODE_NAME}"

    path.data: /usr/share/elasticsearch/data
    network.host: 0.0.0.0

    discovery.zen.minimum_master_nodes: 2
    discovery.zen.ping.unicast.hosts: ${DISCOVERY_SERVICE}
  log4j2.properties: |
    status = error

    appender.console.type = Console
    appender.console.name = console
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] %marker%m%n

    rootLogger.level = info
    rootLogger.appenderRef.console.ref = console
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: $APP_INSTANCE_NAME-elasticsearch
  labels: &ElasticsearchDeploymentLabels
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: elasticsearch-server
spec:
  selector:
    matchLabels: *ElasticsearchDeploymentLabels
  serviceName: $APP_INSTANCE_NAME-elasticsearch-svc
  replicas: 2
  template:
    metadata:
      labels: *ElasticsearchDeploymentLabels
    spec:
      terminationGracePeriodSeconds: 180
      initContainers:
      # This init container sets the appropriate limits for mmap counts on the hosting node.
      # https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html
      - name: set-max-map-count
        image: $IMAGE_INIT
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        command:
        - /bin/bash
        - -c
        - 'if [[ "$(sysctl vm.max_map_count --values)" -lt 262144 ]]; then sysctl -w vm.max_map_count=262144; fi'
      # This init container copies config files from the configmap into
      # a normal file system. Configmap mounted as a volume lives on a read-only
      # filesystem that would fail Elasticsearch.
      - name: copy-config
        image: $IMAGE_INIT
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: config
          mountPath: /usr/share/elasticsearch/config
        - name: configmap
          mountPath: /elasticsearchconfig
        command:
        - /bin/bash
        - -c
        - >-
          mkdir -p /usr/share/elasticsearch/config;
          cp /elasticsearchconfig/* /usr/share/elasticsearch/config/;
          chmod 777 /usr/share/elasticsearch/config/*
      containers:
      - name: elasticsearch
        image: $IMAGE_ELASTICSEARCH
        imagePullPolicy: Always
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CLUSTER_NAME
          value: "$APP_INSTANCE_NAME-cluster"
        - name: DISCOVERY_SERVICE
          value: "$APP_INSTANCE_NAME-elasticsearch-svc"
        ports:
        - name: http
          containerPort: 9200
        - name: tcp-transport
          containerPort: 9300
        volumeMounts:
        - name: config
          mountPath: /usr/share/elasticsearch/config
        - name: $APP_INSTANCE_NAME-elasticsearch-pvc
          mountPath: /usr/share/elasticsearch/data
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
          initialDelaySeconds: 5
        livenessProbe:
          exec:
            command:
            - /usr/bin/pgrep
            - -x
            - "java"
          initialDelaySeconds: 5
        resources:
          requests:
            memory: "2Gi"
      volumes:
      - name: configmap
        configMap:
          name: "$APP_INSTANCE_NAME-configmap"
      - name: config
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: $APP_INSTANCE_NAME-elasticsearch-pvc
      labels:
        app.kubernetes.io/name: "$APP_INSTANCE_NAME"
        app.kubernetes.io/component: elasticsearch-server
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: $APP_INSTANCE_NAME-elasticsearch-svc
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: elasticsearch-server
spec:
  ports:
  - name: http
    port: 9200
  - name: tcp-transport
    port: 9300
  selector:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: elasticsearch-server
  type: ClusterIP
