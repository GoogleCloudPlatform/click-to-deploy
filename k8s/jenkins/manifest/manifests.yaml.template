apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: $APP_INSTANCE_NAME-jenkins-pvc
  labels:
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: jenkins-master
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
  storageClassName: standard
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: $APP_INSTANCE_NAME-jenkins-deployment
  labels: &JenkinsDeploymentLabels
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: jenkins-master
spec:
  replicas: 1
  selector:
    matchLabels: *JenkinsDeploymentLabels
  template:
    metadata:
      labels: *JenkinsDeploymentLabels
    spec:
      volumes:
      - name: $APP_INSTANCE_NAME-jenkins-pvc
        persistentVolumeClaim:
          claimName: $APP_INSTANCE_NAME-jenkins-pvc
      initContainers:
        - name: volume-permissions-fix
          image: $IMAGE_JENKINS
          command: ["sh", "-c", "chown 1000:1000 /var/jenkins_home"]
          securityContext:
            runAsUser: 0
          volumeMounts:
          - name: $APP_INSTANCE_NAME-jenkins-pvc
            mountPath: /var/jenkins_home
      containers:
      - name: jenkins-master
        image: $IMAGE_JENKINS
        ports:
        - containerPort: 8080
        - containerPort: 50000
        volumeMounts:
        - name: $APP_INSTANCE_NAME-jenkins-pvc
          mountPath: /var/jenkins_home
        readinessProbe:
          httpGet:
            path: /login
            port: 8080
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 2
          failureThreshold: 5
        env:
        - name: JENKINS_OPTS
          value: ''
        - name: JAVA_OPTS
          value: '-Xmx1800m'
        resources:
          limits:
            memory: 2.0Gi
          requests:
            memory: 2.0Gi
---
apiVersion: v1
kind: Service
metadata:
  name: $APP_INSTANCE_NAME-jenkins-ui
  labels: &JenkinsDeploymentLabels
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: jenkins-master
spec:
  type: NodePort
  selector: *JenkinsDeploymentLabels
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: ui
---
apiVersion: v1
kind: Service
metadata:
  name: $APP_INSTANCE_NAME-jenkins-slaves-connector
  labels: &JenkinsDeploymentLabels
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: jenkins-master
spec:
  selector: *JenkinsDeploymentLabels
  ports:
    - protocol: TCP
      port: 50000
      targetPort: 50000
      name: slaves-connector
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: $APP_INSTANCE_NAME-jenkins-ui
  labels:
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: jenkins-master
spec:
# Resource Secret $APP_INSTANCE_NAME-tls is created by deployer via entrypoint.sh
  tls:
  - secretName: $APP_INSTANCE_NAME-tls
  backend:
    serviceName: $APP_INSTANCE_NAME-jenkins-ui
    servicePort: 8080
