---
apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: "{{ .Release.Name }}"
  annotations:
    kubernetes-engine.cloud.google.com/icon: >-
      data:image/png;base64,{{ .Files.Get "logo.png" | b64enc }}
    marketplace.cloud.google.com/deploy-info: '{"partner_id": "click-to-deploy-containers", "product_id": "jenkins", "partner_name": "Google Click to Deploy"}'
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
spec:
  descriptor:
    version: "{{ .Values.jenkins.image.tag }}"
    type: Jenkins
    description: |-
      Jenkins is an open source automation server.

      # Support
      Google does not offer support for this solution. However, community support is available on
      [Stack Overflow](https://stackoverflow.com/questions/tagged/jenkins/).
      Additional community support is available on [community forums](https://groups.google.com/forum/#!forum/jenkinsci-usershttps://groups.google.com/forum/#!forum/jenkinsci-users).
    maintainers:
    - name: Google Click to Deploy
      url: https://cloud.google.com/solutions/#click-to-deploy
    links:
    - description: 'User Guide: Google Click to Deploy Jenkins'
      url: https://github.com/GoogleCloudPlatform/click-to-deploy/blob/master/k8s/jenkins/README.md
    - description: 'Jenkins User Documentation'
      url: https://jenkins.io/doc/
    notes: |-
      # Prerequisites
      
      You'll need the following tools in your environment:

      *  [gcloud](https://cloud.google.com/sdk/gcloud/): if gcloud has not been configured yet, then configure gcloud by following the [gcloud Quickstart](https://cloud.google.com/sdk/gcloud/).
      *  [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/): set `kubectl` to a specific cluster by following the steps at [container get-credentials](https://cloud.google.com/sdk/gcloud/reference/container/clusters/get-credentials).
      *  [sed](https://www.gnu.org/software/sed/)

      # Accessing your Jenkins instance

      > NOTE: For HTTPS, you must accept a temporary TLS certificate.

      1. Read a temporary password:

          ```shell
          kubectl -n{{ .Release.Namespace }} exec \
          $(kubectl -n{{ .Release.Namespace }} get pod -oname | sed -n /\\/{{ .Release.Name }}-jenkins/s.pods\\?/..p) \
          cat /var/jenkins_home/secrets/initialAdminPassword
          ```

      1. Identify the HTTPS endpoint:

          ```shell
          echo https://$(kubectl -n{{ .Release.Namespace }} get ingress -l "app.kubernetes.io/name={{ .Release.Name }}" -ojsonpath="{.items[0].status.loadBalancer.ingress[0].ip}")/
          ```

      1.  Navigate to the endpoint.

      # Configuring your Jenkins instance

      Follow the on-screen instructions to fully configure your Jenkins instance:

      *  Install plugins
      *  Create a first admin user
      *  Set your Jenkins URL (you can choose to start with the default URL and change it later)
      *  Start using your fresh Jenkins installation!

      For further information, refer to the [Jenkins website](https://jenkins.io/) or [this project GitHub page](https://github.com/GoogleCloudPlatform/click-to-deploy/tree/master/k8s/jenkins).
  info:
  - name: Jenkins HTTP address
    type: Reference
    valueFrom:
      ingressRef:
        name: {{ .Release.Name }}-jenkins-ui
        protocol: HTTPS
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}"
  componentKinds:
  - group: v1
    kind: PersistentVolumeClaim
  - group: v1
    kind: Secret
  - group: v1
    kind: Service
  - group: apps/v1beta2
    kind: StatefulSet
  - group: extensions/v1beta1
    kind: Ingress
