apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: {{ .Release.Name }}
  annotations:
    kubernetes-engine.cloud.google.com/icon: >-
      data:image/png;base64,{{ .Files.Get "logo.png" | b64enc }}
    marketplace.cloud.google.com/deploy-info: '{"partner_id": "click-to-deploy-containers", "product_id": {{ .Chart.Name | quote }}, "partner_name": "Google Click to Deploy"}'
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  descriptor:
    type: Hazelcast
    version: "{{ .Values.hazelcast.image.tag }}"
    description: |-
      Hazelcast IMDG (In-Memory Data Grid) is an in-memory data store based on Java which offers caching solutions
      ensuring that data is in the right place when itâ€™s needed for optimal performance.

      # Support
      Google does not offer support for this solution. However, community support is available on
      [Stack Overflow](https://stackoverflow.com/questions/tagged/hazelcast/).

      Additional support is available on [Gitter chat with community members](https://gitter.im/hazelcast/hazelcast).
    maintainers:
    - name: Google Click to Deploy
      url: https://cloud.google.com/solutions/#click-to-deploy
    links:
    - description: 'User Guide: Google Click to Deploy Hazelcast'
      url: https://github.com/GoogleCloudPlatform/click-to-deploy/blob/master/k8s/hazelcast/README.md
    - description: 'Getting started with Hazelcast'
      url: https://hazelcast.org/getting-started-with-hazelcast/
    - description: Hazelcast IMDG Reference Manual
      url: https://docs.hazelcast.org/docs/latest/manual/html-single/index.html
    - description: Hazelcast Code Samples Repository
      url: https://github.com/hazelcast/hazelcast-code-samples

    notes: |-
      # Get the authentication credentials for the cluster
      ```shell
      gcloud container clusters get-credentials [CLUSTER_NAME] --zone [CLUSTER_ZONE]
      ```
      where:
      * `[CLUSTER_NAME]` is the name of the cluster for this application
      * `[CLUSTER_ZONE]` is the zone in which the cluster is operating

      For information on getting the credentials for a cluster, read the [Google Kubernetes Engine documentation](https://cloud.google.com/kubernetes-engine/docs/quickstart#get_authentication_credentials_for_the_cluster).
      Make sure that all components are in `ready` status.
      To connect to the Hazelcast service from your machine, you should use curl or other HTTP client.

      Forward the Hazelcast service client port to your machine:
      ```shell
      kubectl port-forward svc/{{ .Release.Name }}-svc --namespace {{ .Release.Namespace }} 5701
      ```
      Then run the below commands in a new terminal window:
      ```shell

      ## Put some value
      curl -X POST -d 'my-value' \
        'http://localhost:5701/hazelcast/rest/maps/mapName/mykey'

      ## Get value
      curl 'http://localhost:5701/hazelcast/rest/maps/mapName/mykey'

  info:
  - name: hazelcast
    type: Reference
    valueFrom:
      serviceRef:
        name: "{{ .Release.Name }}-svc"
  - name: Forward Mancenter port locally
    value: kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ .Release.Name }}-mancenter-svc 8080:8080
  - name: Hazelcast Mancenter address (local only)
    value: http://localhost:8080/hazelcast-mancenter
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}
  componentKinds:
  - group: v1
    kind: Secret
  - group: v1
    kind: ConfigMap
  - group: v1
    kind: Service
  - group: apps/v1
    kind: StatefulSet
  - group: v1
    kind: PersistentVolumeClaim
