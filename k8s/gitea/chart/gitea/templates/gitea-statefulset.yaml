---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{.Release.Name}}-gitea
  labels: &GiteaStatefulSetLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: gitea-server
spec:
  replicas: 1
  selector:
    matchLabels: *GiteaStatefulSetLabels
  serviceName: {{ .Release.Name }}-gitea-svc
  template:
    metadata:
      labels: *GiteaStatefulSetLabels
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: init-directories
          image: "{{ .Values.gitea.image.repo }}:{{ .Values.gitea.image.tag }}"
          imagePullPolicy: IfNotPresent
          command: ["/usr/sbin/init_directory_structure.sh"]
          env:
            - name: GITEA_APP_INI
              value: "/data/gitea/conf/app.ini"
            - name: GITEA_CUSTOM
              value: "/data/gitea"
            - name: GITEA_WORK_DIR
              value: "/data"
            - name: GITEA_TEMP
              value: "/tmp/gitea"
          volumeMounts:
            - name: init
              mountPath: /usr/sbin
            - name: temp
              mountPath: /tmp
            - name: data
              mountPath: /data
        - name: init-app-ini
          image: "{{ .Values.gitea.image.repo }}:{{ .Values.gitea.image.tag }}"
          imagePullPolicy: IfNotPresent
          command: ["/usr/sbin/config_environment.sh"]
          env:
            - name: GITEA_APP_INI
              value: "/data/gitea/conf/app.ini"
            - name: GITEA_CUSTOM
              value: "/data/gitea"
            - name: GITEA_WORK_DIR
              value: "/data"
            - name: GITEA_TEMP
              value: "/tmp/gitea"
          volumeMounts:
            - name: config
              mountPath: /usr/sbin
            - name: temp
              mountPath: /tmp
            - name: data
              mountPath: /data
            - name: inline-config-sources
              mountPath: /env-to-ini-mounts/inlines/
        - name: configure-gitea
          image: "{{ .Values.gitea.image.repo }}:{{ .Values.gitea.image.tag }}"
          command: ["/usr/sbin/configure_gitea.sh"]
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1000
          env:
            - name: GITEA_APP_INI
              value: "/data/gitea/conf/app.ini"
            - name: GITEA_CUSTOM
              value: "/data/gitea"
            - name: GITEA_WORK_DIR
              value: "/data"
            - name: GITEA_TEMP
              value: "/tmp/gitea"                     
            - name: GITEA_ADMIN_USERNAME
              value: {{ .Values.gitea.admin.username | quote }}
            - name: GITEA_ADMIN_PASSWORD
              value: {{ .Values.gitea.admin.password | quote }}
          volumeMounts:
            - name: init
              mountPath: /usr/sbin
            - name: temp
              mountPath: /tmp
            - name: data
              mountPath: /data
      terminationGracePeriodSeconds: 60
      containers:
        - name: gitea
          image: "{{ .Values.gitea.image.repo }}:{{ .Values.gitea.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            # SSH Port values have to be set here as well for openssh configuration
            - name: SSH_LISTEN_PORT
              value: {{ .Values.gitea.sshPort | quote}}
            - name: SSH_PORT
              value: {{ .Values.gitea.sshPort | quote}}
            - name: GITEA_APP_INI
              value: "/data/gitea/conf/app.ini"
            - name: GITEA_CUSTOM
              value: "/data/gitea"
            - name: GITEA_WORK_DIR
              value: "/data"
            - name: GITEA_TEMP
              value: "/tmp/gitea"
            - name: TMPDIR
              value: "/tmp/gitea"
          ports:
            - name: ssh
              containerPort: {{ .Values.gitea.sshPort }}
            - name: http
              containerPort: {{ .Values.gitea.httpPort }}
            - name: exporter
              containerPort: 9090          
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 200
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10          
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10   
          volumeMounts:
            - name: temp
              mountPath: /tmp
            - name: data
              mountPath: /data
        {{- if .Values.metrics.exporter.enabled }}
        - name: stackdriver-exporter
          image: {{ .Values.metrics.image }}
          ports:
          - name: profiler
            containerPort: 6060
          command:
          - /monitor
          - --stackdriver-prefix=custom.googleapis.com
          - --source=gitea:http://localhost:9090/metrics
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          - --monitored-resource-types=k8s
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        {{- end }}
      volumes:
        - name: init
          secret:
            secretName: {{ .Release.Name }}-gitea-init
            defaultMode: 110
        - name: config
          secret:
            secretName: {{ .Release.Name }}-gitea-config
            defaultMode: 110
        - name: inline-config-sources
          secret:
            secretName: {{ .Release.Name }}-gitea-inline-config
        - name: temp
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels: *GiteaStatefulSetLabels
      spec:
        accessModes:
            - {{ .Values.persistence.accessMode }}
        resources:
          requests:
            storage: {{ .Values.gitea.persistence.size | quote }}
