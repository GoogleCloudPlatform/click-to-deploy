apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-zk
  labels: &ZookeeperDeploymentLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: zookeeper
spec:
  serviceName: {{ .Release.Name }}-zk-headless
  replicas: {{ .Values.zookeeper.zkReplicas }}
  selector:
    matchLabels: *ZookeeperDeploymentLabels
  podManagementPolicy: "Parallel"
  template:
    metadata:
      labels: *ZookeeperDeploymentLabels
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/component"
                    operator: In
                    values:
                    - zookeeper
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: zookeeper
        imagePullPolicy: Always
        image: "{{ .Values.zookeeper.image.name }}:{{ .Values.zookeeper.image.tag }}"
        resources:
          requests:
            memory: {{ .Values.zookeeper.memoryRequest | quote }}
            cpu: {{ .Values.zookeeper.cpuRequest | quote }}
        ports:
        - containerPort: {{ .Values.zookeeper.clientPort }}
          name: client
        - containerPort: {{ .Values.zookeeper.serverPort }}
          name: server
        - containerPort: {{ .Values.zookeeper.electionsPort }}
          name: leader-election
        env:
        - name: JMXAUTH
          value: "false"
        - name: JMXDISABLE
          value: "false"
        - name: JMXPORT
          value: "1099"
        - name: JMXSSL
          value: "false"
        - name : ZK_REPLICAS
          value: {{ .Values.zookeeper.zkReplicas | quote }}
        - name : ZK_HEAP_SIZE
          value: {{ .Values.zookeeper.zkHeapSize | quote }}
        - name : ZK_TICK_TIME
          value: {{ .Values.zookeeper.zkTicktime | quote }}
        - name : ZK_MAX_CLIENT_CNXNS
          value: {{ .Values.zookeeper.zkMaxClientCnxns | quote }}
        - name: ZK_SNAP_RETAIN_COUNT
          value: {{ .Values.zookeeper.zkAutopurgeSnapRetainCount | quote }}
        - name: ZK_PURGE_INTERVAL
          value: {{ .Values.zookeeper.zkPurgeInterval | quote }}
        - name: ZK_CLIENT_PORT
          value: {{ .Values.zookeeper.clientPort | quote }}
        - name: ZK_SERVER_PORT
          value: {{ .Values.zookeeper.serverPort | quote }}
        - name: ZK_ELECTION_PORT
          value: {{ .Values.zookeeper.electionsPort | quote }}
        - name: ZOO_4LW_COMMANDS_WHITELIST
          value: "*"
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -ec
            - |
              echo ruok | nc 127.0.0.1 ${1:-2181}
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -ec
            - |
              zkServer.sh status
        command:
        - /bin/bash
        - -ec
        - /config-scripts/start.sh
        volumeMounts:
        - name: config
          mountPath: /config-scripts
        - name: datadir
          mountPath: /data
      - name: exporter
        imagePullPolicy: Always
        image: "{{ .Values.exporter.image }}:{{ .Values.exporter.tag }}"
        ports:
        - containerPort: {{ .Values.exporter.port }}
          name: metrics
      {{ if .Values.metrics.exporter.enabled }}
      - name: prometeus-to-sd
        imagePullPolicy: Always
        image: {{ .Values.metrics.image }}
        command:
            - /monitor
            - --stackdriver-prefix=custom.googleapis.com
            - --source=zookeeper:http://localhost:{{ .Values.exporter.port }}/metrics
            - --pod-id=$(POD_NAME)
            - --namespace-id=$(POD_NAMESPACE)
            - --monitored-resource-types=k8s
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
      {{ end }}
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-config
            defaultMode: 0555
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.zookeeper.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.zookeeper.persistence.size }}
