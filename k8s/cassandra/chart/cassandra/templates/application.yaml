---
apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: "{{ .Release.Name }}"
  annotations:
    kubernetes-engine.cloud.google.com/icon: >-
      data:image/png;base64,{{ .Files.Get "logo.png" | b64enc }}
    marketplace.cloud.google.com/deploy-info: '{"partner_id": "click-to-deploy-containers", "product_id": "cassandra", "partner_name": "Google Click to Deploy"}'
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
spec:
  descriptor:
    type: Cassandra (Managed Updates)
    version: "{{ .Values.cassandra.image.tag }}"
    description: |-
      Cassandra is a NoSQL, highly scalable, high-performance distributed database with high
      availability with no single point of failure.

      # Support
      Google does not offer support for this solution. However, community support is available on
      [Stack Overflow](https://stackoverflow.com/questions/tagged/cassandra/).
      Additional community support is available on [cassandra website](http://cassandra.apache.org).
    maintainers:
    - name: Google Click to Deploy
      url: https://cloud.google.com/solutions/#click-to-deploy
    links:
    - description: 'User Guide: Google Click to Deploy Cassandra'
      url: https://github.com/GoogleCloudPlatform/click-to-deploy/blob/master/k8s/cassandra/README.md
    - description: 'DataStax Cassandra documentation'
      url: https://docs.datastax.com/en/cassandra/3.0/
    - description: 'Apache documentation for Cassandra'
      url: https://cassandra.apache.org/doc/latest/getting_started/index.html
    notes: |-
      # Get tooling from GitHub

      Please download K8s Cassandra tools from GitHub, invoking following commands
      ```
      git clone https://github.com/GoogleCloudPlatform/click-to-deploy
      cd click-to-deploy/k8s/cassandra
      ```

      Scripts and tools are availabe in `scripts` directory.

      # Check Cassandra cluster

      If deployment is successful, you should be able to check status of Cassandra cluster.

      To do this, use `nodetool status` command on one of containers. `nodetool` is Cassandra
      specific tool to manage Cassandra cluster. It is part of Cassandra container image.

      ```shell
      kubectl exec "{{ .Release.Name }}-cassandra-0" --namespace "{{ .Release.Namespace }}" -c cassandra -- nodetool status
      ```

      # Access Cassandra service (internal)

      It is possible to connect to Cassandra without exposing it to public access.

      To do this, please connect from container inside K8s cluster using hostname
      `{{ .Release.Name }}-cassandra-0.{{ .Release.Name }}-cassandra-svc.{{ .Release.Namespace }}.svc.cluster.local`

      # Access Cassandra service (via `kubectl port-forward`)

      You could also use a local proxy to access the service that is not exposed publicly.
      Run the following command in a separate background terminal:

      ```shell
      kubectl port-forward "{{ .Release.Name }}-cassandra-0" 9042:9042 --namespace "{{ .Release.Namespace }}"
      ```

      In you main terminal:

      ```shell
      cqlsh --cqlversion=3.4.4
      ```

      In the response, you should see a Cassandra welcome message:

      ```shell
      Use HELP for help.
      cqlsh>
      ```

  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}"
  componentKinds:
  - group: v1
    kind: PersistentVolumeClaim
  - group: v1
    kind: Service
  - group: apps/v1beta2
    kind: StatefulSet
