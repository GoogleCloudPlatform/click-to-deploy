apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name}}-sonarqube
  labels: &SonarQubeLabels
    app.kubernetes.io/component: sonarqube
    app.kubernetes.io/name: "{{ .Release.Name }}"
spec:
  replicas: 1
  selector:
    matchLabels: *SonarQubeLabels
  serviceName: {{ .Release.Name }}-sonarqube-svc
  template:
    metadata:
      labels: *SonarQubeLabels
    spec:
      initContainers:
      - name: check-db-ready
        image: {{ .Values.postgresql.image }}
        command: ['sh', '-c',
          'until pg_isready -h {{ .Release.Name }}-postgresql-service -p 5432;
          do echo waiting for database; sleep 2; done;']
      containers:
        - name: {{ .Release.Name}}-sonarqube
          image: {{ .Values.sonarqube.image}}
          resources:
            requests:
              memory: "2048Mi"
            limits:
              memory: "3072Mi"
          imagePullPolicy: Always
          env:
            - name: SONARQUBE_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{.Release.Name}}-secret
            - name: SONARQUBE_JDBC_URL
              value: jdbc:postgresql://{{ .Release.Name }}-postgresql-service:5432/{{.Values.postgresql.db.name}}
            - name: SONARQUBE_JDBC_USERNAME
              value: {{.Values.postgresql.db.user}}
          ports:
            - containerPort: 9000
              name: sonar-port
          livenessProbe:
            httpGet:
              path: /sessions/new
              port: 9000
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /sessions/new
              port: 9000
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 6
          volumeMounts:
          - mountPath: "/opt/sonarqube/extensions/"
            name: {{ .Release.Name}}-ext
      volumes:
      - name: {{ .Release.Name}}-ext
        persistentVolumeClaim:
          claimName: {{ .Release.Name}}-ext
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name}}-ext
      labels: *SonarQubeLabels
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: standard
      resources:
        requests:
          storage: 10Gi
