kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-postgresql-deployment
  labels: &PostgreSQLDeploymentLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: postgresql-server
spec:
  replicas: 1
  selector:
    matchLabels: *PostgreSQLDeploymentLabels
  template:
    metadata:
      labels: *PostgreSQLDeploymentLabels
    spec:
      serviceAccountName: {{ .Release.Name }}-serviceaccount
      volumes:
      - name: tls-volume
        secret:
          secretName: {{ .Release.Name }}-tls
      - name: {{ .Release.Name }}-postgresql-pvc
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-postgresql-pvc
      containers:
      - name: postgresql-server
        image: {{ .Values.postgresql.image }}
        imagePullPolicy: Always
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - name: {{ .Release.Name }}-postgresql-pvc
          mountPath: /var/lib/postgresql/data
        - name: tls-volume
          mountPath: /var/lib/postgresql/data/tls
        env:
        - name: "PGDATA"
          value: "/var/lib/postgresql/data/pgdata"
        - name: "POSTGRES_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: password
        - name: "POSTGRES_USER"
          value: {{ .Values.postgresql.db.user}}
        - name: "POSTGRES_DB"
          value: {{.Values.postgresql.db.name}}
      - name: postgresql-exporter
        image: {{ .Values.postgresql.exporter.image }}
        imagePullPolicy: Always
        ports:
          - containerPort: 9187
            name: exporter
        env:
          - name: "DATA_SOURCE_URI"
            value: "localhost:5432/postgres?sslmode=disable"
          - name: "DATA_SOURCE_USER"
            value: "postgres"
          - name: "DATA_SOURCE_PASS"
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secret
                key: password
