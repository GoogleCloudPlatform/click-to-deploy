apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-galera
  labels: &MariaDBDeploymentLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: mariadb-server
spec:
  replicas: {{ .Values.db.replicas }}
  selector:
    matchLabels: *MariaDBDeploymentLabels
  serviceName: {{ .Release.Name }}-galera-svc
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels: *MariaDBDeploymentLabels
    spec:
      initContainers:
      - name: mariadb-config
        # Copy MariaDB files from ConfigMap in order set permissions for scripts
        # and have possibility to modify config files by peer-finder
        image: "{{ .Values.mariadb.image.repo }}:{{ .Values.mariadb.image.tag }}"
        command:
        - 'sh'
        - '-cx'
        - |
          cp /configmap/*.cnf /etc/mysql/conf.d
          cp /configmap/*.sh /opt/galera
          chmod +x /opt/galera/*
        volumeMounts:
        - name: configmap
          mountPath: /configmap
        - name: config
          mountPath: /etc/mysql/conf.d
        - name: scripts
          mountPath: /opt/galera
      - name: peer-finder
        image: "{{ .Values.peerFinder.image }}"
        command: ["/peer-finder"]
        args: ["-on-start=/opt/galera/on-start.sh", "-service={{ .Release.Name }}-galera-svc"]
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: scripts
          mountPath: /opt/galera
        - name: config
          mountPath: /etc/mysql/conf.d
      containers:
      - name: mariadb
        image: "{{ .Values.mariadb.image.repo }}:{{ .Values.mariadb.image.tag }}"
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.service.port }}
          name: mysql
        - containerPort: 4444
          name: sst
        - containerPort: 4567
          name: replication
        - containerPort: 4568
          name: ist
        resources:
          requests:
            cpu: 100m
            memory: 1Gi
        env:
        - name: MYSQL_INITDB_SKIP_TZINFO
          value: "true"
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-galera
              key: root-password
        - name: GALERA_RECOVERY
          value: "/opt/galera/galera-recovery.sh"
        livenessProbe:
          tcpSocket:
            port: mysql
          initialDelaySeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: mysql
          initialDelaySeconds: 20
          timeoutSeconds: 5
        volumeMounts:
        - name: config
          mountPath: /etc/mysql/conf.d
        - name: scripts
          mountPath: /opt/galera
        - name: datadir
          mountPath: /var/lib/mysql
        - name: tls-volume
          mountPath: /etc/mysql/mariadb.conf.d/certs
        - name: exporter-config
          mountPath: /docker-entrypoint-initdb.d/
          readOnly: true
      - name: mysqld-exporter
        image: {{ .Values.db.exporter.image }}
        env:
        - name: MYSQLD_EXPORTER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-galera
              key: mysqld-exporter-pass
        - name: DATA_SOURCE_NAME
          value: {{ .Values.db.exporter.user }}:$(MYSQLD_EXPORTER_PASSWORD)@(127.0.0.1:3306)/
        ports:
        - name: exporter
          containerPort: 9104
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9104
        readinessProbe:
          httpGet:
            path: /metrics
            port: 9104
          initialDelaySeconds: 60
          timeoutSeconds: 30
          failureThreshold: 10
          periodSeconds: 10
      {{ if .Values.metrics.exporter.enabled }}
      - name: prometheus-to-sd
        image: {{ .Values.metrics.image }}
        command:
        - /monitor
        - --stackdriver-prefix=custom.googleapis.com
        - --source=mariadb:http://localhost:9104/metrics
        - --pod-id=$(POD_NAME)
        - --namespace-id=$(POD_NAMESPACE)
        - --monitored-resource-types=k8s
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      {{ end }}
      volumes:
      - name: config
        emptyDir: {}
      - name: configmap
        configMap:
          name: {{ .Release.Name }}-galera-cfg
      - name: scripts
        emptyDir: {}
      - name: tls-volume
        secret:
          secretName: {{ .Release.Name }}-galera-tls
      - name: exporter-config
        secret:
          secretName: {{ .Release.Name }}-galera
          items:
          - key: mysqld_exporter.sql
            path: mysqld_exporter.sql
  volumeClaimTemplates:
  - metadata:
      name: datadir
      labels: *MariaDBDeploymentLabels
    spec:
      resources:
        requests:
          storage: {{ .Values.mariadb.persistence.size }}
      accessModes:
      - ReadWriteOnce
      storageClassName: {{ .Values.mariadb.persistence.storageClass }}
