---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: $APP_INSTANCE_NAME-data-pvc
spec:
  resources:
    requests:
      storage: 1Gi
  accessModes:
  - ReadOnlyMany
  storageClassName: standard
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: $APP_INSTANCE_NAME-nginx
  labels: &NginxDeploymentLabels
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: $APP_INSTANCE_NAME-server
spec:
  selector:
    matchLabels: *NginxDeploymentLabels
  updateStrategy:
    type: RollingUpdate
  serviceName: $APP_INSTANCE_NAME-nginx-svc
  replicas: 2
  template:
    metadata:
      labels: *NginxDeploymentLabels
    spec:
      terminationGracePeriodSeconds: 180
      containers:
      - name: nginx
        image: $IMAGE_NGINX
        imagePullPolicy: Always
        ports:
        - name: nginx
          containerPort: 80
          protocol: TCP
        - name: nginx-https
          containerPort: 443
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: nginx
          initialDelaySeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: nginx
          initialDelaySeconds: 5
          timeoutSeconds: 2
        volumeMounts:
        - name: $APP_INSTANCE_NAME-nginx-data
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
          readOnly: true
        - name: certs
          mountPath: /etc/nginx/certs
          readOnly: true
      volumes:
      - name: $APP_INSTANCE_NAME-nginx-data
        persistentVolumeClaim:
          claimName: $APP_INSTANCE_NAME-data-pvc
      - name: certs
        secret:
          secretName: $APP_INSTANCE_NAME-nginx-secret
      - name: nginx-config
        configMap:
          name: $APP_INSTANCE_NAME-nginx-configmap
          items:
          - key: nginx-config.conf
            path: nginx-config.conf
---
apiVersion: v1
kind: Service
metadata:
  name: $APP_INSTANCE_NAME-nginx-svc
  labels:
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: $APP_INSTANCE_NAME-server
spec:
  ports:
  - name: nginx-http-port
    port: 80
    protocol: TCP
  - name: nginx-https-port
    port: 443
    protocol: TCP
  selector:
    app.kubernetes.io/name: $APP_INSTANCE_NAME
    app.kubernetes.io/component: $APP_INSTANCE_NAME-server
  type: LoadBalancer #ClusterIP #LoadBalancer
