---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-nginx
  labels: &NginxDeploymentLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: nginx-server
spec:
  selector:
    matchLabels: *NginxDeploymentLabels
  updateStrategy:
    type: RollingUpdate
  serviceName: {{ .Release.Name }}-nginx-svc
  replicas: {{ .Values.nginx.replicas }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-nginx-pvc
      labels: *NginxDeploymentLabels
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard
      resources:
        requests:
          storage: 1Gi
  template:
    metadata:
      labels: *NginxDeploymentLabels
    spec:
      terminationGracePeriodSeconds: 180
      initContainers:
      # This init container is reponsible for creating default index html file
      - name: initialize-volume
        image: {{ .Values.nginx.initImage }}
        imagePullPolicy: Always
        command:
        - /bin/bash
        - -euc
        - |
          if [[ ! -f /usr/share/nginx/html/index.html ]]; then
          cat <<EOF >/usr/share/nginx/html/index.html
          <!DOCTYPE>
          <html>
            <head>
              <title>Web Server Application</title>
            </head>
            <body>
               <h1>Web site powered by NGINX</h1>
               <p>This page is under construction. Please come back soon!</p>
            </body>
          </html>
          EOF
          fi
        volumeMounts:
        - name: {{ .Release.Name }}-nginx-pvc
          mountPath: /usr/share/nginx/html
      containers:
      - name: nginx
        image: {{ .Values.nginx.image }}
        imagePullPolicy: Always
        ports:
        - name: nginx
          containerPort: 80
          protocol: TCP
        - name: nginx-https
          containerPort: 443
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: nginx
          initialDelaySeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: nginx
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: {{ .Release.Name }}-nginx-pvc
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
          readOnly: true
        - name: certs
          mountPath: /etc/nginx/certs
          readOnly: true
      volumes:
      - name: certs
        secret:
          secretName: {{ .Release.Name }}-nginx-secret
      - name: nginx-config
        configMap:
          name: {{ .Release.Name }}-nginx-configmap
          items:
          - key: nginx-config.conf
            path: nginx-config.conf
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-nginx-svc
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: nginx-server
spec:
  ports:
  - name: nginx-http-port
    port: 80
    protocol: TCP
  - name: nginx-https-port
    port: 443
    protocol: TCP
  selector:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: nginx-server
  type: LoadBalancer
