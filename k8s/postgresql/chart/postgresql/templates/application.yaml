apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: "{{ .Release.Name }}"
  annotations:
    kubernetes-engine.cloud.google.com/icon: >-
      data:image/png;base64,{{ .Files.Get "logo.png" | b64enc }}
    marketplace.cloud.google.com/deploy-info: '{"partner_id": "click-to-deploy-containers", "product_id": "postgresql", "partner_name": "Google Click to Deploy"}'
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
spec:
  descriptor:
    type: PostgreSQL
    version: '9.6.10'
    description: |-
      PostgreSQL is an open source object-relational database with an emphasis on extensibility and standards-compliance.

      # Support
      Google does not offer support for this solution. However, community support is available on
      [Stack Overflow](https://stackoverflow.com/questions/tagged/postgresql/).
      Additional community support is available on [community forums](https://www.postgresql.org/list/).
    maintainers:
    - name: Google Click to Deploy
      url: https://cloud.google.com/solutions/#click-to-deploy
    links:
    - description: 'User Guide: Google Click to Deploy PostgreSQL'
      url: https://github.com/GoogleCloudPlatform/click-to-deploy/blob/master/k8s/postgresql/README.md
    - description: 'PostgreSQL: Getting Started'
      url: https://github.com/GoogleCloudPlatform/postgresql-docker/blob/master/9/README.md
    notes: |-
      # Access PostgreSQL

      Forward PostgreSQL port locally:

      ```
      kubectl port-forward \
        --namespace "${NAMESPACE}" \
        "${APP_INSTANCE_NAME}-postgresql-0" 5432
      ```

      Connect to the database:

      ```
      export PGPASSWORD=$(kubectl get secret "{{ .Release.Name }}-secret" \
        --output=jsonpath='{.data.password}' | base64 -d)

      psql -U postgres -h 127.0.0.1
      ```
  info:
  - name: PostgreSQL IP address
    type: Reference
    valueFrom:
      serviceRef:
        name: "{{ .Release.Name }}-postgresql-svc"
  - name: Temporary password for user postgres
    type: Reference
    valueFrom:
      secretKeyRef:
        key: password
        name: "{{ .Release.Name }}-secret"
  - name: Application Namespace
    value: "{{ .Release.Namespace }}"
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}"
  componentKinds:
  - group: apps/v1beta2
    kind: StatefulSet
  - group: v1
    kind: PersistentVolumeClaim
  - group: v1
    kind: Secret
  - group: v1
    kind: Service
