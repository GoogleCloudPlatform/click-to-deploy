apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: "{{ .Release.Name }}"
  annotations:
    kubernetes-engine.cloud.google.com/icon: >-
      data:image/png;base64,{{ .Files.Get "logo.png" | b64enc }}
    marketplace.cloud.google.com/deploy-info: '{"partner_id": "click-to-deploy-containers", "product_id": "solr", "partner_name": "Google Click to Deploy"}'
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
spec:
  descriptor:
    type: {{ template "solrMode" . }}
    version: {{ .Values.solr.image.tag | quote }}
    description: |-
      Apache Solr is an open-source enterprise search platform, written in Java, from the Apache Lucene project.

      # Support
      Google does not offer support for this solution. However, community support is available on [StackOverflow](https://stackoverflow.com/questions/tagged/solr).
    maintainers:
    - name: Google Click to Deploy
      url: https://cloud.google.com/solutions/#click-to-deploy
    links:
    - description: 'User Guide: Google Click to Deploy {{ template "solrMode" . }}'
      url: https://github.com/GoogleCloudPlatform/click-to-deploy/blob/master/k8s/solr/README.md
    {{- if not .Values.solr.standalone }}
    - description: 'SolrCloud: Getting Started'
      url: https://lucene.apache.org/solr/guide/8_6/getting-started-with-solrcloud.html
    {{- end }}
    - description: 'Solr Tutorials'
      url: https://lucene.apache.org/solr/guide/8_6/getting-started.html
    notes: |-
      # Get authentication credentials for the cluster

      ```shell
      gcloud container clusters get-credentials \
        [CLUSTER_NAME] --zone [CLUSTER_ZONE]
      ```

      where:
      * `[CLUSTER_NAME]` is the name of the cluster for this app
      * `[CLUSTER_ZONE]` is the zone in which the cluster is operating

      For more information, read the [instructions for getting authentication credentials for the cluster](https://cloud.google.com/kubernetes-engine/docs/quickstart#get_authentication_credentials_for_the_cluster).

      Make sure that all components are in `ready` status.

      Deployed service of {{ template "solrMode" . }} is of type ClusterIP, so you can reach to {{ template "solrMode" . }} Admin UI within a Kubernetes cluster.

      {{- if not .Values.solr.standalone }}
      SolrCloud is configured with both a [basic authentication plugin](https://lucene.apache.org/solr/guide/8_6/basic-authentication-plugin.html) and [ZooKeeper access control lists (ACL)](https://lucene.apache.org/solr/guide/8_6/zookeeper-access-control.html).
      You can check the credentials from the app's page in the console, or you print them by running the following commands:

      ```shell
      # Get and print SolrCloud user credentials
      SOLR_PASSWORD=$(kubectl get secret \
        --namespace {{ .Release.Namespace }} \
        {{ .Release.Name }}-solr-secret \
        -o jsonpath="{.data.solr-password}" |
        base64 --decode)

      echo "username: solr"
      echo "password: ${SOLR_PASSWORD}"
      ```
      {{- else }}

      Solr deployed in a standalone mode, without any authentication enabled, for development and testing purposes.

      {{- end }}

      Forward {{ template "solrMode" . }} service to your machine.
      ```shell
      kubectl port-forward \
        svc/{{ .Release.Name }}-solr-svc \
        --namespace {{ .Release.Namespace }} 8983
      ```

      Visit [http://localhost:8983/solr](http://localhost:8983/solr) on your web browser and log in with `solr` user credentials, if necessary.
  info:
  - name: {{ template "solrMode" . }} service
    type: Reference
    valueFrom:
      serviceRef:
        name: "{{ .Release.Name }}-solr-svc"
  {{- if not .Values.solr.standalone }}
  - name: SolrCloud User
    value: solr
  - name: SolrCloud Password
    type: Reference
    valueFrom:
      secretKeyRef:
        key: solr-password
        name: "{{ .Release.Name }}-solr-secret"
  - name: ZooKeeper "admin-user" Password
    type: Reference
    valueFrom:
      secretKeyRef:
          key: zk-admin-password
          name: "{{ .Release.Name }}-solr-secret"
  - name: ZooKeeper "readonly-user" Password
    type: Reference
    valueFrom:
      secretKeyRef:
        key: zk-readonly-password
        name: "{{ .Release.Name }}-solr-secret"
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}"
  componentKinds:
  - group: apps/v1
    kind: StatefulSet
  - group: apps/v1
    kind: Deployment
  - group: v1
    kind: PersistentVolumeClaim
  - group: policy/v1
    kind: PodDisruptionBudget
  - group: v1
    kind: Secret
  - group: v1
    kind: Service
  - group: v1
    kind: ServiceAccount
  - group: batch/v1
    kind: Job
