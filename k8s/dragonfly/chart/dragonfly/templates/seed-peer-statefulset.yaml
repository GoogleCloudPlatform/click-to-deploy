---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-seed-peer
  labels: &DragonflySeedPeerLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: dragonfly-seed-peer
spec:
  replicas: 1
  serviceName: seed-peer
  selector:
    matchLabels: *DragonflySeedPeerLabels
  template:
    metadata:
      labels: *DragonflySeedPeerLabels
    spec:
      initContainers:
        {{- include "dragonfly.init_container.wait_for_scheduler" . | indent 8 }}
      containers:
        - name: seed-peer
          image: {{ .Values.seedPeer.image }}
          imagePullPolicy: IfNotPresent
          env:
            - name: DRAGONFLY_MANAGER_ADDR
              value: "{{ .Release.Name }}-manager-service.{{ .Release.Namespace }}.svc"
          ports:
            - containerPort: 65006
              protocol: TCP
            - containerPort: 65007
              protocol: TCP
            - containerPort: 65008
              protocol: TCP
          resources:
            {{- toYaml .Values.seedPeer.resources | nindent 12 }}
          volumeMounts:
            - name: logs
              mountPath: "/var/log/dragonfly/seed-peer"
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:65006"]
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:65006"]
            initialDelaySeconds: 15
            periodSeconds: 10
        {{- if .Values.metrics.enable }}
        - name: stackdriver-exporter
          image: {{ .Values.metrics.image }}
          ports:
            - name: profiler
              containerPort: 6060
              command:
                - /monitor
                - --stackdriver-prefix=custom.googleapis.com
                - --source=gitlab:http://localhost:9090/metrics
                - --pod-id=$(POD_NAME)
                - --namespace-id=$(POD_NAMESPACE)
                - --monitored-resource-types=k8s
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                fieldPath: metadata.namespace
        {{- end }}
      volumes:
        - name: logs
          emptyDir: {}



