---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-dfget
  labels: &DragonflyDfgetLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: dragonfly-dfget
spec:
  selector:
    matchLabels: *DragonflyDfgetLabels
  template:
    metadata:
      labels: *DragonflyDfgetLabels
    spec:
      hostPID: true  
      initContainers:
        {{- include "dragonfly.init_container.wait_for_scheduler" . | indent 8 }}
        {{- include "dragonfly.init_container.update_containerd" . | indent 8 }}
      containers:
        - name: dfget
          image: {{ .Values.dfget.image }}
          imagePullPolicy: IfNotPresent
          env:
            - name: DRAGONFLY_SCHEDULER_ADDR
              value: "{{ .Release.Name }}-scheduler-service.{{ .Release.Namespace }}.svc"
          ports:
            - containerPort: 65000
              protocol: TCP
            - containerPort: 65001
              hostPort: 65001
              hostIP: 127.0.0.1
              protocol: TCP
            - containerPort: 65002
              protocol: TCP
          resources:
            {{- toYaml .Values.dfget.resources | nindent 12 }}
          volumeMounts:
            - name: logs
              mountPath: "/var/log/dragonfly/dfget"
            - name: containerd-conf
              mountPath: /host/etc/containerd
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:65000"]
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:65000"]
            initialDelaySeconds: 15
            periodSeconds: 10
        {{- if .Values.metrics.enable }}
        - name: stackdriver-exporter
          image: {{ .Values.metrics.image }}
          ports:
            - name: profiler
              containerPort: 6060
              command:
                - /monitor
                - --stackdriver-prefix=custom.googleapis.com
                - --source=gitlab:http://localhost:9090/metrics
                - --pod-id=$(POD_NAME)
                - --namespace-id=$(POD_NAMESPACE)
                - --monitored-resource-types=k8s
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                fieldPath: metadata.namespace
        {{- end }}
      volumes:
        - name: logs
          emptyDir: {}
        - name: containerd-conf
          hostPath:
            path: /etc/containerd
