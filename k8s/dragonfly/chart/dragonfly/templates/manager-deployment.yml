---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Name}}-manager
  labels: &DragonflyManagerLabels
    app.kubernetes.io/name: {{.Release.Name}}
    app.kubernetes.io/component: dragonfly-manager
spec:
  replicas: 1
  selector:
    matchLabels: *DragonflyManagerLabels
  template:
    metadata:
      labels: *DragonflyManagerLabels
    spec:
      initContainers:
        {{- include "dragonfly.init_container.check_db" . | indent 8 }}
      containers:
        - name: manager
          image: "{{ .Values.manager.image.repo }}:{{ .Values.manager.image.tag }}"
          imagePullPolicy: IfNotPresent
          env: 
            #Mysql settings 
            - name: DRAGONFLY_MYSQL_USER
              value: {{ .Values.db.dragonflyUser }}
            - name: DRAGONFLY_MYSQL_PW
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mysql-secret
                  key: dragonfly-password
            - name: DRAGONFLY_MYSQL_HOST
              value: "{{ .Release.Name }}-mysql-svc.{{ .Release.Namespace }}.svc"
            - name: DRAGONFLY_MYSQL_DBNAME
              value: {{ .Values.db.name }}
            #Redis settings
            - name: DRAGONFLY_REDIS_HOST
              value: "{{ .Release.Name }}-redis-svc.{{ .Release.Namespace }}.svc"
            - name: DRAGONFLY_REDIS_PW
              valueFrom: 
                secretKeyRef:
                  name: {{ .Release.Name }}-redis-secret
                  key: password
          ports:
            - name: rest
              containerPort: 8080
            - name: gprc
              containerPort: 65003
          resources:
          {{- toYaml .Values.manager.resources | nindent 12 }}
          volumeMounts:                                  
            - name: logs
              mountPath: /var/log/dragonfly/manager
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:65003"]
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:65003"]
            initialDelaySeconds: 15
            periodSeconds: 10  
        {{- if .Values.metrics.enable }}
        - name: stackdriver-exporter
          image: {{ .Values.metrics.image }}
          ports:
            - name: profiler
              containerPort: 6060
              command:
                - /monitor
                - --stackdriver-prefix=custom.googleapis.com
                - --source=gitlab:http://localhost:9090/metrics
                - --pod-id=$(POD_NAME)
                - --namespace-id=$(POD_NAMESPACE)
                - --monitored-resource-types=k8s
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                fieldPath: metadata.namespace
        {{- end }}                  
      volumes:        
        - name: logs
          emptyDir: {}
