---
apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: "{{ .Release.Name }}"
  annotations:
    kubernetes-engine.cloud.google.com/icon: >-
      data:image/png;base64,{{ .Files.Get "logo.png" | b64enc }}
    marketplace.cloud.google.com/deploy-info: '{"partner_id": "click-to-deploy-containers", "product_id": {{ .Chart.Name | quote }}, "partner_name": "Google Click to Deploy"}'

  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
spec:
  descriptor:
    type: Dragonfly
    version: "{{ .Values.manager.image.tag }}"
    description: >-
      Dragonfly is open-source p2p-based image and file Distribution System.
      It is designed to improve the efficiency and speed of large-scale file distribution. 
      It is widely used in the fields of application distribution, cache distribution, log distribution and image distribution.
      # Support
      Google does not offer support for this solution. However, community support is available on
      [Stack Overflow](https://stackoverflow.com/)

    maintainers:
    - name: Google Click to Deploy
      url: https://cloud.google.com/solutions/#click-to-deploy
    links:
    - description: 'User Guide: Google Click to Deploy Dragonfly'
      url: https://github.com/GoogleCloudPlatform/click-to-deploy/blob/master/k8s/dragonfly/README.md
    - description: Getting started with Dragonfly
      url: https://d7y.io/docs/
    notes: |-
      Dragonfly manager UI is exposed as a ClusterIP-only service, `{{ .Release.Name }}-manager-service`.
      To connect to UI, you can either expose a public service endpoint, or keep it private,
      but connect from you local environment with `kubectl port-forward`.
      ## Forward Dragonfly manager port in local environment
      You can use the port forwarding feature of `kubectl` to forward Dragonfly managers's port to your local
      machine. Run the following command in the background:
      ```shell
      kubectl port-forward \
        --namespace {{ .Release.Namespace }} \
        svc/{{ .Release.Name }}-manager-service \
        8080:8080
      ```
      Now you can access the Dragonfly manager UI [http://localhost:8080](http://localhost:8080).
     
  info:
  - name: Forward Dragonfly port locally
    value: kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ .Release.Name }}-manager-service 8080:80
  - name: Dragonfly Manager - Site address (local only)
    value: http://localhost:8080/
  - name: MySQL - root user password
    type: Reference
    valueFrom:
      secretKeyRef:
        key: root-password
        name: {{ .Release.Name }}-mysql-secret
  - name: MySQL - Dragonfly user password
    type: Reference
    valueFrom:
      secretKeyRef:
        key: dragonfly-password
        name: {{ .Release.Name }}-mysql-secret
  - name: Redis - server password
    type: Reference
    valueFrom:
      secretKeyRef:
        key: password
        name: {{ .Release.Name }}-redis-secret
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Release.Name }}"
  componentKinds:
  - group: apps/v1
    kind: Deployment
  - group: apps/v1
    kind: DaemonSet
  - group: apps/v1
    kind: StatefulSet
  - group: v1
    kind: Secret
  - group: v1
    kind: Service
  - group: v1
    kind: ConfigMap
