apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: $APP_INSTANCE_NAME-kibana
  labels: &KibanaDeploymentLabels
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: kibana-server
spec:
  selector:
    matchLabels: *KibanaDeploymentLabels
  replicas: 1
  template:
    metadata:
      labels: *KibanaDeploymentLabels
    spec:
      containers:
      - name: kibana
        image: $IMAGE_KIBANA
        imagePullPolicy: Always
        env:
        - name: ELASTICSEARCH_URL
          value: "http://$APP_INSTANCE_NAME-elasticsearch-svc:9200"
        ports:
        - name: http
          containerPort: 5601
        readinessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 5
---
apiVersion: batch/v1
kind: Job
metadata:
  name: $APP_INSTANCE_NAME-kibana-init-job
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: kibana-server
spec:
  template:
    spec:
      containers:
      - name: pi
        image: $IMAGE_INIT
        command: ['/bin/bash', '-c']
        args: 
        - |
          apt-get update && apt-get install curl
          url="http://$APP_INSTANCE_NAME-kibana-svc:5601"
          index_pattern="logstash-*"
          id="logstash-*"
          time_field="@timestamp"
          until $(curl --output /dev/null --silent --head --fail $url/api/status); do
            printf '.'
            sleep 5
          done
          curl -f -XPOST -H "Content-Type: application/json" -H "kbn-xsrf: anything" \
            "$url/api/saved_objects/index-pattern/$id" \
            -d"{\"attributes\":{\"title\":\"$index_pattern\",\"timeFieldName\":\"$time_field\"}}"
          curl -XPOST -H "Content-Type: application/json" -H "kbn-xsrf: anything" \
            "$url/api/kibana/settings/defaultIndex" \
            -d"{\"value\":\"$id\"}"
      restartPolicy: Never
  backoffLimit: 1
---
apiVersion: v1
kind: Service
metadata:
  name: $APP_INSTANCE_NAME-kibana-svc
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: kibana-server
spec:
  ports:
  - name: http
    port: 5601
  selector:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: kibana-server
  type: ClusterIP
