apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-gogs
  labels: &gogsLabels
    app.kubernetes.io/name: "{{ .Release.Name }}"
    app.kubernetes.io/component: gogs
spec:
  replicas: {{ .Values.gogs.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  selector:
    matchLabels: *gogsLabels
  template:
    metadata:
      labels: *gogsLabels
    spec:
      serviceAccountName: "{{ .Values.gogs.serviceAccount }}"
      initContainers:
        {{- include "gogs.init_container.check_db" . | indent 8 }}
      containers:
        - name: gogs
          image: "{{ .Values.gogs.image.repo }}:{{ .Values.gogs.image.tag }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          envFrom:
          - secretRef:
              name: {{ .Release.Name }}-config-envs
          env:
          - name: "GOGS_DB_TYPE"
            value: "postgres"
          - name: "POSTGRES_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-config-envs
                key: POSTGRES_PASSWORD
          - name: "GOGS_DB_NAME"
            value: "gogs"
          - name: "GOGS_DB_USER"
            value: "gogs"
          - name: "GOGS_DB_HOST"
            value: "{{ .Release.Name }}-postgresql-svc"

